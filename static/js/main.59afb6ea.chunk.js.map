{"version":3,"sources":["action/types.js","action/arrayAction.js","action/algorithms/selectionSort.js","action/algorithms/insertionSort.js","action/algorithms/bubbleSort.js","action/algorithms/binaryInsertionSort.js","action/algorithms/mergeSort.js","action/algorithms/quickSort.js","action/algorithms/heapSort.js","action/algorithms/radixSort.js","components/Navbar/navbar.jsx","components/ArrayContainer/arrayContainer.jsx","virtualizationApp.js","reducers/array.js","reducers/index.js","reducers/speed.js","reducers/algorithm.js","reducers/currenState.js","reducers/shape.js","store.js","index.js"],"names":["SWAP_ARRAY","TOGGLE_STATE","maxHeight","window","screen","height","getRandomInt","min","max","Math","ceil","floor","random","setArray","size","dispatch","array","i","push","type","payload","sleep","ms","Promise","resolve","setTimeout","selectionSort","getState","a","temp","shape","document","getElementById","style","backgroundColor","j","speed","curState","binaryInsertionSort","left","right","mid","mergeSortRecur","l","r","m","merge","n1","n2","L","Array","R","k","mergeSort","disp","getSt","sort","low","high","partition","pivot","h","quickSort","heapSort","newJ","NavBar","sizeChange","props","arrayChanged","value","speedChange","speedChanged","startSelected","toggleState","algorithm","selection_sort","bubble_sort","insertion_sort","binary_insertion_sort","merge_sort","quick_sort","heap_sort","radix_sort","this","algorithmChanged","Navbar","collapseOnSelect","expand","bg","variant","className","Brand","href","alt","src","width","Toggle","aria-controls","Collapse","id","Nav","Link","OverlayTrigger","overlay","Tooltip","defaultValue","onInput","disabled","NavDropdown","title","Item","onClick","shapeChanged","Component","connect","state","count","mx","c","length","PRIMARY_COLOR","ArrayContainer","screenWidth","barWidth","widthStyle","map","index","key","VirtualizationApp","Fragment","initialState","rootReducer","combineReducers","action","configureStore","createStore","applyMiddleware","thunk","ReactDOM","render","store"],"mappings":"qVAGaA,EAAa,aAEbC,EAAe,eCHtBC,EAAmC,IAAvBC,OAAOC,OAAOC,OAmBhC,SAASC,EAAaC,EAAKC,GAGzB,OAFAD,EAAME,KAAKC,KAAKH,GAChBC,EAAMC,KAAKE,MAAMH,GACVC,KAAKE,MAAMF,KAAKG,UAAYJ,EAAMD,EAAM,IAAMA,EAGxCM,MAvBE,SAAAC,GACf,OAAO,SAAAC,GAEL,IADA,IAAMC,EAAQ,GACLC,EAAI,EAAGA,EAAIH,IAAQG,EAC1BD,EAAME,KAAKZ,EAAa,GAAIJ,IAG9Ba,EAAS,CACPI,KDZsB,eCatBC,QAAS,CACPJ,MAAOA,EACPF,KAAMA,O,+BC2Dd,SAASO,EAAMC,GACb,OAAO,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,MAGrCI,MA5Ef,WACE,8CAAO,WAAOX,EAAUY,GAAjB,yBAAAC,EAAA,sDACCZ,EAAQW,IAAWX,MAAMA,MACzBF,EAAOa,IAAWX,MAAMF,KAC1BP,EAAM,EACRsB,EAAO,EACAZ,EAAI,EALR,YAKWA,EAAIH,GALf,iBAMHP,EAAMU,EACmB,QAArBU,IAAWG,MACbC,SAASC,eAAT,oBAAqCzB,IAAO0B,MAAMC,gBAChD,QAEFH,SAASC,eAAT,oBAAqCzB,IAAO0B,MAAMC,gBAChD,QAEKC,EAAIlB,EAAI,EAdd,YAciBkB,EAAIrB,GAdrB,oBAewB,QAArBa,IAAWG,MAfd,wBAgBCC,SAASC,eAAT,oBAAqCG,IAAKF,MAAMC,gBAC9C,MAjBH,UAkBOb,EAAMM,IAAWS,OAlBxB,QAmBCL,SAASC,eAAT,oBAAqCG,IAAKF,MAAMC,gBAC9C,QApBH,+BAsBCH,SAASC,eAAT,oBAAqCG,IAAKF,MAAMC,gBAC9C,MAvBH,UAwBOb,EAAMM,IAAWS,OAxBxB,QAyBCL,SAASC,eAAT,oBAAqCG,IAAKF,MAAMC,gBAC9C,QA1BH,WA4BGlB,EAAMmB,GAAKnB,EAAMT,KACM,QAArBoB,IAAWG,OACbC,SAASC,eAAT,oBAAqCzB,IAAO0B,MAAMC,gBAChD,QACF3B,EAAM4B,EACNJ,SAASC,eAAT,oBAAqCzB,IAAO0B,MAAMC,gBAChD,UAEFH,SAASC,eAAT,oBAAqCzB,IAAO0B,MAAMC,gBAChD,QACF3B,EAAM4B,EACNJ,SAASC,eAAT,oBAAqCzB,IAAO0B,MAAMC,gBAChD,UAGDP,IAAWU,SA3Cf,uDAc6BF,EAd7B,6BA+CsB,QAArBR,IAAWG,MACbC,SAASC,eAAT,oBAAqCzB,IAAO0B,MAAMC,gBAChD,QAEFH,SAASC,eAAT,oBAAqCzB,IAAO0B,MAAMC,gBAChD,QAEJL,EAAOb,EAAMC,GACbD,EAAMC,GAAKD,EAAMT,GACjBS,EAAMT,GAAOsB,EAxDV,UAyDGd,EAAS,CACbI,KAAMnB,EACNgB,MAAM,YAAKA,KA3DV,WA6DEW,IAAWU,SA7Db,uDAKuBpB,EALvB,uBAiEDU,IAAWU,UACbtB,EAAS,CAAEI,KAAMlB,IAlEd,4CAAP,qDAAM,ICiDR,SAASoB,EAAMC,GACb,OAAO,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,MCCpD,SAASD,EAAMC,GACb,OAAO,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,MCoBpD,SAASD,EAAMC,GACb,OAAO,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,MAGrCgB,IC7EXvB,EAAUY,ED6ECW,EA7Ef,WACE,8CAAO,WAAOvB,EAAUY,GAAjB,2BAAAC,EAAA,sDACCZ,EAAQW,IAAWX,MAAMA,MACzBF,EAAOa,IAAWX,MAAMF,KAC1Be,EAAO,EACTU,EAAO,EACPC,EAAQ,EACRC,EAAM,EAECxB,EAAI,EARR,YAQWA,EAAIH,GARf,iBASHyB,EAAO,EACPC,EAAQvB,EAVL,YAYIsB,EAAOC,GAZX,oBAaDC,EAAMhC,KAAKE,OAAO4B,EAAOC,GAAS,GACT,QAArBb,IAAWG,MAdd,wBAeCC,SAASC,eAAT,oBAAqCS,IAAOR,MAAMC,gBAChD,MAhBH,UAiBOb,EAAMM,IAAWS,OAjBxB,QAkBCL,SAASC,eAAT,oBAAqCS,IAAOR,MAAMC,gBAChD,QAnBH,+BAqBCH,SAASC,eAAT,oBAAqCS,IAAOR,MAAMC,gBAChD,MAtBH,UAuBOb,EAAMM,IAAWS,OAvBxB,QAwBCL,SAASC,eAAT,oBAAqCS,IAAOR,MAAMC,gBAChD,QAzBH,WA2BGlB,EAAMC,IAAMD,EAAMyB,GACpBD,EAAQC,EAERF,EAAOE,EAAM,EAEVd,IAAWU,SAhCf,yFAqCQE,EAAOtB,GArCf,oBAsCDY,EAAOb,EAAMuB,GACbvB,EAAMuB,GAAQvB,EAAMC,GACpBD,EAAMC,GAAKY,EACc,QAArBF,IAAWG,MAzCd,wBA0CCC,SAASC,eAAT,oBAAqCO,IAAQN,MAAMC,gBACjD,QA3CH,UA4COb,EAAMM,IAAWS,OA5CxB,QA6CCL,SAASC,eAAT,oBAAqCO,IAAQN,MAAMC,gBACjD,QA9CH,+BAgDCH,SAASC,eAAT,oBAAqCO,IAAQN,MAAMC,gBACjD,QAjDH,UAkDOb,EAAMM,IAAWS,OAlDxB,QAmDCL,SAASC,eAAT,oBAAqCO,IAAQN,MAAMC,gBACjD,QApDH,WAsDIP,IAAWU,SAtDf,uDAqCoBE,EArCpB,2BA0DHxB,EAAS,CACPI,KAAMnB,EACNgB,MAAM,YAAKA,KAERW,IAAWU,SA9Db,uDAQuBpB,EARvB,uBAkEDU,IAAWU,UACbtB,EAAS,CAAEI,KAAMlB,IAnEd,4CAAP,qDAAM,I,SCgBOyC,E,kFAAf,WAA8B1B,EAAO2B,EAAGC,GAAxC,eAAAhB,EAAA,2DACMe,EAAIC,GADV,wBAEQC,EAAIpC,KAAKE,OAAOgC,EAAIC,GAAK,GAFjC,SAGUF,EAAe1B,EAAO2B,EAAGE,GAHnC,UAISlB,IAAWU,SAJpB,iEAOUK,EAAe1B,EAAO6B,EAAI,EAAGD,GAPvC,UAQSjB,IAAWU,SARpB,oEAWUS,EAAM9B,EAAO2B,EAAGE,EAAGD,GAX7B,WAYSjB,IAAWU,SAZpB,wF,+BAkBeS,E,oFAAf,WAAqB9B,EAAO2B,EAAGE,EAAGD,GAAlC,6BAAAhB,EAAA,sDACMmB,EAAKF,EAAIF,EAAI,EACbK,EAAKJ,EAAIC,EAETI,EAAI,IAAIC,MAAMH,GACdI,EAAI,IAAID,MAAMF,GAET/B,EAAI,EAPf,YAOkBA,EAAI+B,GAPtB,oBAQIC,EAAEhC,GAAKD,EAAM2B,EAAI1B,GACjBkC,EAAElC,GAAKD,EAAM6B,EAAI,EAAI5B,GACI,QAArBU,IAAWG,MAVnB,wBAWMC,SAASC,eAAT,oBAAqCW,EAAI1B,IAAKgB,MAAMC,gBAClD,MACFH,SAASC,eAAT,oBAAqCa,EAAI,EAAI5B,IAAKgB,MAAMC,gBACtD,MAdR,UAeYb,EAAMM,IAAWS,OAf7B,QAgBML,SAASC,eAAT,oBAAqCW,EAAI1B,IAAKgB,MAAMC,gBAClD,QACFH,SAASC,eAAT,oBAAqCa,EAAI,EAAI5B,IAAKgB,MAAMC,gBACtD,QAnBR,+BAqBMH,SAASC,eAAT,oBAAqCW,EAAI1B,IAAKgB,MAAMC,gBAClD,MACFH,SAASC,eAAT,oBAAqCa,EAAI,EAAI5B,IAAKgB,MAAMC,gBACtD,MAxBR,UAyBYb,EAAMM,IAAWS,OAzB7B,QA0BML,SAASC,eAAT,oBAAqCW,EAAI1B,IAAKgB,MAAMC,gBAClD,QACFH,SAASC,eAAT,oBAAqCa,EAAI,EAAI5B,IAAKgB,MAAMC,gBACtD,QA7BR,WA+BSP,IAAWU,SA/BpB,uDAO4BpB,EAP5B,uBAoCM8B,IAAOC,IACTC,EAAEF,EAAK,GAAK/B,EAAM2B,EAAII,EAAK,IAGzB9B,EAAI,EACNkB,EAAI,EACJiB,EAAIT,EA1CR,aA2CS1B,EAAI8B,GAAMZ,EAAIa,GA3CvB,wBA4CQC,EAAEhC,IAAMkC,EAAEhB,GACZnB,EAAMoC,GAAKH,EAAEhC,KAEbD,EAAMoC,GAAKD,EAAEhB,KAEfJ,SAASC,eAAT,oBAAqCoB,IAAKnB,MAAMC,gBAAkB,MAjDtE,UAkDUb,EAAMM,IAAWS,OAlD3B,WAmDIL,SAASC,eAAT,oBAAqCoB,IAAKnB,MAAMC,gBAAkB,UAChEkB,EACFrC,EAAS,CACPI,KAAMnB,EACNgB,MAAM,YAAKA,KAERW,IAAWU,SAzDpB,kFA8DSpB,EAAI8B,GA9Db,wBA+DI/B,EAAMoC,GAAKH,EAAEhC,KACbmC,IACArC,EAAS,CACPI,KAAMnB,EACNgB,MAAM,YAAKA,KAnEjB,UAqEUK,EAAMM,IAAWS,OArE3B,WAsEST,IAAWU,SAtEpB,kFA2ESF,EAAIa,GA3Eb,wBA4EIhC,EAAMoC,GAAKD,EAAEhB,KACbiB,IACArC,EAAS,CACPI,KAAMnB,EACNgB,MAAM,YAAKA,KAhFjB,UAkFUK,EAAMM,IAAWS,OAlF3B,WAmFST,IAAWU,SAnFpB,kH,sBAyFA,SAAShB,EAAMC,GACb,OAAO,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,MAGrC+B,IChIXtC,EAAUY,EDgIC0B,EA9Hf,WAEE,8CAAO,WAAOC,EAAMC,GAAb,iBAAA3B,EAAA,6DACLb,EAAWuC,EACX3B,EAAW4B,EACLvC,EAHD,YAGaW,IAAWX,MAAMA,OAC7BF,EAAOa,IAAWX,MAAMF,KAJzB,SAKC4B,EAAe1B,EAAO,EAAGF,EAAO,GALjC,OAMDa,IAAWU,UACbtB,EAAS,CAAEI,KAAMlB,IAPd,2CAAP,qDAAM,I,SCWOuD,E,kFAAf,WAAoBxC,EAAOyC,EAAKC,GAAhC,eAAA9B,EAAA,2DACM6B,EAAMC,GADZ,iCAEsBC,EAAU3C,EAAOyC,EAAKC,GAF5C,UAEQE,EAFR,OAGSjC,IAAWU,SAHpB,iEAMUmB,EAAKxC,EAAOyC,EAAKG,GAN3B,UAOSjC,IAAWU,SAPpB,oEAUUmB,EAAKxC,EAAO4C,EAAQ,EAAGF,GAVjC,WAWS/B,IAAWU,SAXpB,wF,+BAiBesB,E,kFAAf,WAAyB3C,EAAOyC,EAAKC,GAArC,qBAAA9B,EAAA,sDACMgC,EAAQ5C,EAAMP,KAAKE,OAAO8C,EAAMC,GAAQ,IAC1C7B,EAAO,EACPc,EAAIc,EAAM,EACVI,EAAIH,EAAO,EAJf,qBAQQf,EACuB,QAArBhB,IAAWG,MATrB,wBAUQC,SAASC,eAAT,oBAAqCW,IAAKV,MAAMC,gBAAkB,MAV1E,SAWcb,EAAMM,IAAWS,OAX/B,OAYQL,SAASC,eAAT,oBAAqCW,IAAKV,MAAMC,gBAC9C,QAbV,+BAeQH,SAASC,eAAT,oBAAqCW,IAAKV,MAAMC,gBAAkB,MAf1E,UAgBcb,EAAMM,IAAWS,OAhB/B,QAiBQL,SAASC,eAAT,oBAAqCW,IAAKV,MAAMC,gBAC9C,QAlBV,WAoBWP,IAAWU,SApBtB,wDAuBarB,EAAM2B,GAAKiB,EAvBxB,6BAyBQC,EACuB,QAArBlC,IAAWG,MA1BrB,wBA2BQC,SAASC,eAAT,oBAAqC6B,IAAK5B,MAAMC,gBAAkB,MA3B1E,UA4Bcb,EAAMM,IAAWS,OA5B/B,QA6BQL,SAASC,eAAT,oBAAqC6B,IAAK5B,MAAMC,gBAC9C,QA9BV,+BAgCQH,SAASC,eAAT,oBAAqC6B,IAAK5B,MAAMC,gBAAkB,MAhC1E,UAiCcb,EAAMM,IAAWS,OAjC/B,QAkCQL,SAASC,eAAT,oBAAqC6B,IAAK5B,MAAMC,gBAC9C,QAnCV,WAqCWP,IAAWU,SArCtB,wDAwCarB,EAAM6C,GAAKD,EAxCxB,8BAyCQjB,GAAKkB,GAzCb,wDA4CIhC,EAAOb,EAAM2B,GACb3B,EAAM2B,GAAK3B,EAAM6C,GACjB7C,EAAM6C,GAAKhC,EACXd,EAAS,CACPI,KAAMnB,EACNgB,MAAM,YAAKA,KAERW,IAAWU,SAnDpB,qGAuDSwB,GAvDT,6C,sBA0DA,SAASxC,EAAMC,GACb,OAAO,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,MAGrCwC,MA5Ff,WACE,8CAAO,WAAOR,EAAMC,GAAb,iBAAA3B,EAAA,6DACLb,EAAWuC,EACX3B,EAAW4B,EACPvC,EAHC,YAGWW,IAAWX,MAAMA,OAC7BF,EAAOa,IAAWX,MAAMF,KAJvB,SAKC0C,EAAKxC,EAAO,EAAGF,EAAO,GALvB,OAMDa,IAAWU,UACbtB,EAAS,CAAEI,KAAMlB,IAPd,2CAAP,qDAAM,ICwJR,SAASoB,EAAMC,GACb,OAAO,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,MAGrCyC,MA/Jf,WACE,8CAAO,WAAOhD,EAAUY,GAAjB,+BAAAC,EAAA,sDACDZ,EADC,YACWW,IAAWX,MAAMA,OAC7BF,EAAOa,IAAWX,MAAMF,KAEnBG,EAAIR,KAAKE,MAAMG,EAAO,EAAI,GAJ9B,YAIkCG,GAAK,GAJvC,iBAKHkB,EAAI6B,EAAO/C,EACc,QAArBU,IAAWG,MACbC,SAASC,eAAT,oBAAqCf,IAAKgB,MAAMC,gBAC9C,QAEFH,SAASC,eAAT,oBAAqCf,IAAKgB,MAAMC,gBAC9C,QAXD,YAaIC,EAAIrB,GAbR,oBAcDkD,EAAO7B,EAEPK,EAAY,EAAJL,EAAQ,GADhBI,EAAW,EAAJJ,EAAQ,GAEJrB,GAAQE,EAAMuB,GAAQvB,EAAMgD,KACrCA,EAAOzB,EACkB,QAArBZ,IAAWG,MACbC,SAASC,eAAT,oBAAqCO,IAAQN,MAAMC,gBACjD,MAEFH,SAASC,eAAT,oBAAqCO,IAAQN,MAAMC,gBACjD,OAIFM,EAAQ1B,GAAQE,EAAMwB,GAASxB,EAAMgD,KACd,QAArBrC,IAAWG,OACbC,SAASC,eAAT,oBAAqCO,IAAQN,MAAMC,gBACjD,QACF8B,EAAOxB,EACPT,SAASC,eAAT,oBAAqCgC,IAAQ/B,MAAMC,gBACjD,QAEFH,SAASC,eAAT,oBAAqCO,IAAQN,MAAMC,gBACjD,QACF8B,EAAOxB,EACPT,SAASC,eAAT,oBAAqCgC,IAAQ/B,MAAMC,gBACjD,QAGF8B,IAAS7B,EA3CZ,kCA4COd,EAAMM,IAAWS,OA5CxB,QA6C0B,QAArBT,IAAWG,MACbC,SAASC,eAAT,oBAAqCgC,IAAQ/B,MAAMC,gBACjD,QAEFH,SAASC,eAAT,oBAAqCgC,IAAQ/B,MAAMC,gBACjD,QAEJL,EAAOb,EAAMmB,GACbnB,EAAMmB,GAAKnB,EAAMgD,GACjBhD,EAAMgD,GAAQnC,EACdM,EAAI6B,EACJjD,EAAS,CACPI,KAAMnB,EACNgB,MAAM,YAAKA,KA1Dd,+DA+DIW,IAAWU,SA/Df,+EAmEsB,QAArBV,IAAWG,MACbC,SAASC,eAAT,oBAAqCf,IAAKgB,MAAMC,gBAC9C,QAEFH,SAASC,eAAT,oBAAqCf,IAAKgB,MAAMC,gBAC9C,QAECP,IAAWU,SA1Eb,uDAI4CpB,EAJ5C,uBA+EIA,EAAIH,EAAO,EA/Ef,aA+EkBG,GAAK,GA/EvB,iBAgFHY,EAAOb,EAAMC,GACbD,EAAMC,GAAKD,EAAM,GACjBA,EAAM,GAAKa,EACXd,EAAS,CACPI,KAAMnB,EACNgB,MAAM,YAAKA,KAEbmB,EAAI6B,EAAO,EACc,QAArBrC,IAAWG,MACbC,SAASC,eAAT,oBAAqCf,IAAKgB,MAAMC,gBAC9C,QAEFH,SAASC,eAAT,oBAAqCf,IAAKgB,MAAMC,gBAC9C,QA7FD,aA+FIC,EAAIlB,GA/FR,wBAgGD+C,EAAO7B,EACPI,EAAW,EAAJJ,EAAQ,EACfK,EAAY,EAAJL,EAAQ,EACS,QAArBR,IAAWG,MACbC,SAASC,eAAT,oBAAqCgC,IAAQ/B,MAAMC,gBACjD,MAEFH,SAASC,eAAT,oBAAqCgC,IAAQ/B,MAAMC,gBACjD,MAEAK,EAAOtB,GAAKD,EAAMuB,GAAQvB,EAAMgD,KAClCA,EAAOzB,GAGLC,EAAQvB,GAAKD,EAAMwB,GAASxB,EAAMgD,KACpCA,EAAOxB,GA/GR,UAiHKnB,EAAMM,IAAWS,OAjHtB,WAkHwB,QAArBT,IAAWG,MACbC,SAASC,eAAT,oBAAqCG,IAAKF,MAAMC,gBAC9C,QAEFH,SAASC,eAAT,oBAAqCG,IAAKF,MAAMC,gBAC9C,QAEA8B,IAAS7B,EAzHZ,iBA0HCN,EAAOb,EAAMmB,GACbnB,EAAMmB,GAAKnB,EAAMgD,GACjBhD,EAAMgD,GAAQnC,EACdM,EAAI6B,EACJjD,EAAS,CACPI,KAAMnB,EACNgB,MAAM,YAAKA,KAhId,+DAqIIW,IAAWU,SArIf,gFAyIsB,QAArBV,IAAWG,MACbC,SAASC,eAAT,oBAAqCf,IAAKgB,MAAMC,gBAC9C,QAEFH,SAASC,eAAT,oBAAqCf,IAAKgB,MAAMC,gBAC9C,QAECP,IAAWU,SAhJb,uDA+E4BpB,EA/E5B,wBAoJDU,IAAWU,UACbtB,EAAS,CAAEI,KAAMlB,IArJd,4CAAP,qDAAM,IC2ER,SAASoB,EAAMC,GACb,OAAO,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,M,UCxD9C2C,E,2MAKJC,WAAa,WACX,EAAKC,MAAMC,aAAarC,SAASC,eAAe,cAAcqC,Q,EAGhEC,YAAc,WACZ,EAAKH,MAAMI,aAAaxC,SAASC,eAAe,SAASqC,Q,EAG3DG,cAAgB,WAEd,OADA,EAAKL,MAAMM,cACH,EAAKN,MAAMO,WACjB,IAAK,iBAEH,YADA,EAAKP,MAAMQ,iBAEb,IAAK,cAEH,YADA,EAAKR,MAAMS,cAEb,IAAK,iBAEH,YADA,EAAKT,MAAMU,iBAEb,IAAK,wBAEH,YADA,EAAKV,MAAMW,wBAEb,IAAK,aAEH,YADA,EAAKX,MAAMY,aAEb,IAAK,aAEH,YADA,EAAKZ,MAAMa,aAEb,IAAK,YAEH,YADA,EAAKb,MAAMc,YAEb,IAAK,aAEH,YADA,EAAKd,MAAMe,aAEb,QACE,S,mFAvCJC,KAAKhB,MAAMC,aAAae,KAAKhB,MAAMrD,Q,+BA2C3B,IAAD,SACmCqE,KAAKhB,MAAvCrD,EADD,EACCA,KAAMsB,EADP,EACOA,MAAOgD,EADd,EACcA,iBAErB,OACE,kBAACC,EAAA,EAAD,CACEC,kBAAgB,EAChBC,OAAO,KACPC,GAAG,OACHC,QAAQ,OACRC,UAAU,gBAEV,kBAACL,EAAA,EAAOM,MAAR,CAAcC,KAAK,IAChB,sBACD,yBACEC,IAAI,GACJC,IAAI,6EACJC,MAAM,KACN1F,OAAO,KACPqF,UAAU,6CAGd,kBAACL,EAAA,EAAOW,OAAR,CAAeC,gBAAc,0BAC7B,kBAACZ,EAAA,EAAOa,SAAR,CAAiBC,GAAG,yBAClB,kBAACC,EAAA,EAAD,CAAKV,UAAU,WACb,kBAACU,EAAA,EAAIC,KAAL,CAAUT,KAAK,IAAf,cACA,kBAACU,EAAA,EAAD,CACEC,QAAS,kBAACC,EAAA,EAAD,CAASL,GAAG,gBAAgBrF,IAErC,2BACEK,KAAK,QACLuE,UAAU,eACVS,GAAG,aACH5F,IAAI,IACJC,IAAKC,KAAKE,OAAOR,OAAOC,OAAO2F,MAAQ,KAAO,MAC9CU,aAAc3F,EACd4F,QAAS,kBAAM,EAAKxC,cACpByC,SAAUxB,KAAKhB,MAAM9B,YAGzB,kBAAC+D,EAAA,EAAIC,KAAL,CAAUT,KAAK,IAAf,iBACA,kBAACU,EAAA,EAAD,CACEC,QAAS,kBAACC,EAAA,EAAD,CAASL,GAAG,gBAAZ,IAA6B/D,EAA7B,OAET,2BACEjB,KAAK,QACLuE,UAAU,eACVS,GAAG,QACH5F,IAAI,IACJC,IAAI,MACJiG,aAAcrE,EACdsE,QAAS,kBAAM,EAAKpC,kBAGxB,kBAACsC,EAAA,EAAD,CAAaC,MAAM,aAAaV,GAAG,2BACjC,kBAACS,EAAA,EAAYE,KAAb,CACEC,QAAS,kBAAM3B,EAAiB,oBADlC,kBAKA,kBAACwB,EAAA,EAAYE,KAAb,CAAkBC,QAAS,kBAAM3B,EAAiB,iBAAlD,eAGA,kBAACwB,EAAA,EAAYE,KAAb,CACEC,QAAS,kBAAM3B,EAAiB,oBADlC,kBAKA,kBAACwB,EAAA,EAAYE,KAAb,CACEC,QAAS,kBAAM3B,EAAiB,2BADlC,yBAKA,kBAACwB,EAAA,EAAYE,KAAb,CAAkBC,QAAS,kBAAM3B,EAAiB,gBAAlD,cAGA,kBAACwB,EAAA,EAAYE,KAAb,CAAkBC,QAAS,kBAAM3B,EAAiB,gBAAlD,cAGA,kBAACwB,EAAA,EAAYE,KAAb,CAAkBC,QAAS,kBAAM3B,EAAiB,eAAlD,aAGA,kBAACwB,EAAA,EAAYE,KAAb,CAAkBC,QAAS,kBAAM3B,EAAiB,gBAAlD,eAIF,kBAACwB,EAAA,EAAD,CACEC,MAAM,SACNV,GAAG,0BACHQ,SAAUxB,KAAKhB,MAAM9B,UAErB,kBAACuE,EAAA,EAAYE,KAAb,CACEC,QAAS,kBAAM,EAAK5C,MAAM6C,aAAa,QACvCL,SAAUxB,KAAKhB,MAAM9B,UAFvB,OAMA,kBAACuE,EAAA,EAAYE,KAAb,CACEC,QAAS,kBAAM,EAAK5C,MAAM6C,aAAa,QACvCL,SAAUxB,KAAKhB,MAAM9B,UAFvB,QAOF,kBAAC+D,EAAA,EAAIC,KAAL,CACET,KAAK,GACLmB,QAAS,kBAAM,EAAKvC,iBACpBmC,SAAUxB,KAAKhB,MAAM9B,UAHvB,SAOA,kBAAC+D,EAAA,EAAIC,KAAL,CACET,KAAK,GACLmB,QAAS,kBAAM,EAAK5C,MAAMM,eAC1BkC,UAAWxB,KAAKhB,MAAM9B,UAHxB,e,GA3JS4E,aA6NNC,eApDS,SAAAC,GAAK,MAAK,CAChCnG,MAAOmG,EAAMnG,MAAMA,MACnBF,KAAMqG,EAAMnG,MAAMF,KAClBsB,MAAO+E,EAAM/E,MACbsC,UAAWyC,EAAMzC,UACjBrC,SAAU8E,EAAM9E,aAGQ,SAAAtB,GACxB,MAAO,CACLqD,aAAc,SAAAtD,GACZC,EAASF,EAASC,KAEpBsE,iBAAkB,SAAAV,GAChB3D,EAAS,CAAEI,KAAM,mBAAoBuD,UAAWA,KAElDH,aAAc,SAAAnC,GACZrB,EAAS,CAAEI,KAAM,eAAgBiB,MAAOA,KAE1C4E,aAAc,SAAAlF,GACZf,EAAS,CAAEI,KV9MW,eU8MSW,MAAOA,KAExC2C,YAAa,WACX1D,EAAS,CAAEI,KAAMlB,KAEnB0E,eAAgB,WACd5D,EAASW,MAEXmD,eAAgB,WACd9D,EP1NJ,uCAAO,WAAOA,EAAUY,GAAjB,uBAAAC,EAAA,sDACCZ,EADD,YACaW,IAAWX,MAAMA,OAC7BF,EAAOa,IAAWX,MAAMF,KAC1Be,EAAO,EACTM,EAAI,EAEGlB,EAAI,EANR,YAMWA,EAAIH,GANf,iBAOHqB,EAAIlB,EAAI,EACRY,EAAOb,EAAMC,GARV,YAUIkB,GAAK,GAAKnB,EAAMmB,GAAKN,GAVzB,oBAWwB,QAArBF,IAAWG,MAXd,wBAYCC,SAASC,eAAT,oBAAqCG,IAAKF,MAAMC,gBAC9C,MAbH,UAcOb,EAAMM,IAAWS,OAdxB,QAeCL,SAASC,eAAT,oBAAqCG,IAAKF,MAAMC,gBAC9C,QAhBH,+BAkBCH,SAASC,eAAT,oBAAqCG,IAAKF,MAAMC,gBAC9C,MAnBH,UAoBOb,EAAMM,IAAWS,OApBxB,QAqBCL,SAASC,eAAT,oBAAqCG,IAAKF,MAAMC,gBAC9C,QACFlB,EAAMmB,EAAI,GAAKnB,EAAMmB,GAvBtB,aAyBCA,EACFpB,EAAS,CACPI,KAAMnB,EACNgB,MAAM,YAAKA,KAERW,IAAWU,SA9Bf,+EAkCHrB,EAAMmB,EAAI,GAAKN,EACfd,EAAS,CACPI,KAAMnB,EACNgB,MAAM,YAAKA,KAERW,IAAWU,SAvCb,uDAMuBpB,EANvB,uBA2CDU,IAAWU,UACbtB,EAAS,CAAEI,KAAMlB,IA5Cd,4CAAP,qDAAM,KO4NJ2E,YAAa,WACX7D,EN7NJ,uCAAO,WAAOA,EAAUY,GAAjB,uBAAAC,EAAA,sDACCZ,EADD,YACaW,IAAWX,MAAMA,OAC7BF,EAAOa,IAAWX,MAAMF,KAC1Be,EAAO,EAEFZ,EAAI,EALR,YAKWA,EAAIH,EAAO,GALtB,iBAMMqB,EAAI,EANV,YAMaA,EAAIrB,EAAOG,EAAI,GAN5B,oBAOGD,EAAMmB,GAAKnB,EAAMmB,EAAI,KACvBN,EAAOb,EAAMmB,GACbnB,EAAMmB,GAAKnB,EAAMmB,EAAI,GACrBnB,EAAMmB,EAAI,GAAKN,GAEQ,QAArBF,IAAWG,MAZd,wBAaCC,SAASC,eAAT,oBAAqCG,IAAKF,MAAMC,gBAC9C,MACFH,SAASC,eAAT,oBAAqCG,EAAI,IAAKF,MAAMC,gBAClD,MAhBH,UAiBOb,EAAMM,IAAWS,OAjBxB,QAkBCL,SAASC,eAAT,oBAAqCG,IAAKF,MAAMC,gBAC9C,QACFH,SAASC,eAAT,oBAAqCG,EAAI,IAAKF,MAAMC,gBAClD,QArBH,+BAuBCH,SAASC,eAAT,oBAAqCG,IAAKF,MAAMC,gBAC9C,MACFH,SAASC,eAAT,oBAAqCG,EAAI,IAAKF,MAAMC,gBAClD,MA1BH,UA2BOb,EAAMM,IAAWS,OA3BxB,QA4BCL,SAASC,eAAT,oBAAqCG,IAAKF,MAAMC,gBAC9C,QACFH,SAASC,eAAT,oBAAqCG,EAAI,IAAKF,MAAMC,gBAClD,QA/BH,WAiCDnB,EAAS,CACPI,KAAMnB,EACNgB,MAAM,YAAKA,KAERW,IAAWU,SArCf,uDAMiCF,EANjC,0BAyCER,IAAWU,SAzCb,uDAK2BpB,EAL3B,uBA6CDU,IAAWU,UACbtB,EAAS,CAAEI,KAAMlB,IA9Cd,4CAAP,qDAAM,KM+NJ6E,sBAAuB,WACrB/D,EAASuB,MAEXyC,WAAY,WACVhE,EAASsC,MAEX2B,WAAY,WACVjE,EAAS+C,MAEXmB,UAAW,WACTlE,EAASgD,MAEXmB,WAAY,WACVnE,ED5OJ,uCAAO,WAAOA,EAAUY,GAAjB,iCAAAC,EAAA,sDAOL,IANMZ,EADD,YACaW,IAAWX,MAAMA,OAC7BF,EAAOa,IAAWX,MAAMF,KAC1BsG,EAAQ,GACRC,EAAKrG,EAAM,GACXsG,EAAI,EAECrG,EAAI,EAAGA,EAAIH,IAAQG,EACtBD,EAAMC,GAAKoG,IACbA,EAAKrG,EAAMC,IAIN4B,EAAI,EAbR,YAaWpC,KAAKE,MAAM0G,EAAKxE,GAAK,GAbhC,iBAcHuE,EAAQ,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAEpCnG,EAAI,EAhBV,aAgBaA,EAAIH,GAhBjB,oBAiBDsG,EAAM3G,KAAKE,MAAMK,EAAMC,GAAK4B,GAAK,IAAI3B,KAAKF,EAAMC,IACvB,QAArBU,IAAWG,MAlBd,wBAmBCC,SAASC,eAAT,oBAAqCf,IAAKgB,MAAMC,gBAC9C,MApBH,UAqBOb,EAAMM,IAAWS,OArBxB,QAsBCL,SAASC,eAAT,oBAAqCf,IAAKgB,MAAMC,gBAC9C,QAvBH,+BAyBCH,SAASC,eAAT,oBAAqCf,IAAKgB,MAAMC,gBAC9C,MA1BH,UA2BOb,EAAMM,IAAWS,OA3BxB,QA4BCL,SAASC,eAAT,oBAAqCf,IAAKgB,MAAMC,gBAC9C,QA7BH,WA+BIP,IAAWU,SA/Bf,qDAgBuBpB,IAhBvB,wBAoCHqG,EAAI,EACKrG,EAAI,EArCV,aAqCaA,EAAI,IArCjB,iBAsCQkB,EAAI,EAtCZ,aAsCeA,EAAIiF,EAAMnG,GAAGsG,QAtC5B,oBAuC0B,QAArB5F,IAAWG,MAvChB,wBAwCGC,SAASC,eAAT,oBAAqCsF,IAAKrF,MAAMC,gBAC9C,MAzCL,UA0CSb,EAAMM,IAAWS,OA1C1B,QA2CGL,SAASC,eAAT,oBAAqCsF,IAAKrF,MAAMC,gBAC9C,QA5CL,+BA8CGH,SAASC,eAAT,oBAAqCsF,IAAKrF,MAAMC,gBAC9C,MA/CL,UAgDSb,EAAMM,IAAWS,OAhD1B,QAiDGL,SAASC,eAAT,oBAAqCsF,IAAKrF,MAAMC,gBAC9C,QAlDL,WAoDClB,EAAMsG,GAAKF,EAAMnG,GAAGkB,KAClBmF,EACFvG,EAAS,CAAEI,KAAMnB,EAAYgB,MAAM,YAAKA,KACnCW,IAAWU,SAvDjB,uDAsCsCF,EAtCtC,2BA2DIR,IAAWU,SA3Df,uDAqCuBpB,EArCvB,2BA+DEU,IAAWU,SA/Db,qDAamCQ,GAAK,GAbxC,uBAoEL9B,EAAS,CAAEI,KAAMnB,EAAYgB,MAAM,YAAKA,KACpCW,IAAWU,UACbtB,EAAS,CAAEI,KAAMlB,IAtEd,4CAAP,qDAAM,QCiPOiH,CAGbjD,GClPIuD,I,MAAgB,CAAC,QAAS,UAE1BC,G,iLACM,IAAD,SACiBtC,KAAKhB,MAArBnD,EADD,EACCA,MAAOF,EADR,EACQA,KACX4G,EAAcvH,OAAOC,OAAO2F,MAC5B4B,EAAWlH,KAAKE,MAAM+G,GAAsB,IAAP5G,IACrC4G,GAAe,MACjBA,GAAe,IACfC,EAAWlH,KAAKE,OAAOR,OAAOC,OAAO2F,MAAQ,MAAe,IAAPjF,KAEvD,IAAI8G,EAAa,CACf7B,MAAM,GAAD,OAAK2B,EAAL,OAGP,OACE,yBAAKhC,UAAU,gBAAgBzD,MAAO2F,GACpC,yBAAKlC,UAAU,QAAQzD,MAAO2F,GAC3B5G,EAAM6G,KAAI,SAACxD,EAAOyD,GAAR,OACT,yBACEpC,UAAU,YACVS,GAAE,oBAAe2B,GACjBC,IAAKD,EACL7F,MAAO,CACL8D,MAAM,GAAD,OAAK4B,EAAL,MACLzF,gBACEsF,GAAmC,QAArB,EAAKrD,MAAMrC,MAAkB,EAAI,GACjDzB,OAAQgE,IAGV,yBACEqB,UAAU,MACVS,GAAE,oBAAe2B,GACjB7F,MAAO,CACL5B,OAAO,GAAD,OAAKsH,EAAL,MACN5B,MAAM,GAAD,OAAK4B,EAAL,MACLzF,gBAAiBsF,GAAc,gB,GAlCpBP,aAmDdC,gBANS,SAAAC,GAAK,MAAK,CAChCrG,KAAMqG,EAAMnG,MAAMF,KAClBE,MAAOmG,EAAMnG,MAAMA,MACnBc,MAAOqF,EAAMrF,SAGAoF,CAAyBO,IC1CzBO,G,iLATX,OACE,kBAAC,IAAMC,SAAP,KACE,kBAAC,EAAD,MACA,kBAAC,GAAD,W,GALwBhB,a,ylBCHhC,IAAMiB,GAAe,CACnBpH,KAAML,KAAKE,OAAQR,OAAOC,OAAO2F,MAAQ,KAAO,KAAQ,IACxD/E,MAAO,ICYMmH,GARKC,aAAgB,CAClCpH,MDF0B,WAAmC,IAAlCmG,EAAiC,uDAAzBe,GAAcG,EAAW,uCAC5D,OAAQA,EAAOlH,MACb,IbTwB,eaUtB,OAAO,GAAP,GACKgG,EADL,CAEErG,KAAMuH,EAAOjH,QAAQN,KACrBE,MAAOqH,EAAOjH,QAAQJ,QAE1B,KAAKhB,EACH,OAAO,GAAP,GACKmH,EADL,CAEEnG,MAAOqH,EAAOrH,QAElB,QACE,OAAOmG,ICXX/E,MCR0B,WAAyB,IAAxB+E,EAAuB,uDAAf,GAAIkB,EAAW,uCAClD,OAAQA,EAAOlH,MACb,IfHwB,eeItB,OAAOkH,EAAOjG,MAChB,QACE,OAAO+E,IDIXzC,UETyB,WAAuC,IAAtCyC,EAAqC,uDAA7B,iBAAkBkB,EAAW,uCAC/D,OAAQA,EAAOlH,MACb,IhBF4B,mBgBG1B,OAAOkH,EAAO3D,UAChB,QACE,OAAOyC,IFKX9E,SGVyB,WAA4B,IAA3B8E,EAA0B,wDAAXkB,EAAW,uCACpD,OAAQA,EAAOlH,MACb,KAAKlB,EACH,OAAQkH,EACV,QACE,OAAOA,IHMXrF,MIXwB,WAA4B,IAA3BqF,EAA0B,uDAAlB,MAAOkB,EAAW,uCACnD,OAAQA,EAAOlH,MACb,IlBEwB,ekBDtB,OAAOkH,EAAOvG,MAChB,QACE,OAAOqF,MCKEmB,GANQ,WAGrB,OAFcC,aAAYJ,GAAaK,aAAgBC,QCDzDC,IAASC,OACP,kBAAC,IAAD,CAAUC,MAAON,MACf,kBAAC,GAAD,OAEFvG,SAASC,eAAe,W","file":"static/js/main.59afb6ea.chunk.js","sourcesContent":["export const ARRAY_CHANGE = \"ARRAY_CHANGE\";\r\nexport const SPEED_CHENGE = \"SPEED_CHENGE\";\r\nexport const ALGORITHM_SELECT = \"ALGORITHM_SELECT\";\r\nexport const SWAP_ARRAY = \"SWAP_ARRAY\";\r\nexport const START_SORTING = \"START_SORTING\";\r\nexport const TOGGLE_STATE = \"TOGGLE_STATE\";\r\nexport const SHAPE_CHANGE = \"SHAPE_CHANGE\";\r\n","import { ARRAY_CHANGE } from \"./types\";\r\n\r\nconst maxHeight = window.screen.height * 0.87;\r\n\r\nconst setArray = size => {\r\n  return dispatch => {\r\n    const array = [];\r\n    for (let i = 0; i < size; ++i) {\r\n      array.push(getRandomInt(50, maxHeight));\r\n    }\r\n\r\n    dispatch({\r\n      type: ARRAY_CHANGE,\r\n      payload: {\r\n        array: array,\r\n        size: size\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nexport default setArray;\r\n","import { SWAP_ARRAY, TOGGLE_STATE } from \"../types\";\r\n\r\nfunction selectionSort() {\r\n  return async (dispatch, getState) => {\r\n    const array = getState().array.array;\r\n    const size = getState().array.size;\r\n    let min = 0,\r\n      temp = 0;\r\n    for (let i = 0; i < size; ++i) {\r\n      min = i;\r\n      if (getState().shape === \"bar\") {\r\n        document.getElementById(`array-bar-${min}`).style.backgroundColor =\r\n          \"green\";\r\n      } else {\r\n        document.getElementById(`array-dot-${min}`).style.backgroundColor =\r\n          \"green\";\r\n      }\r\n      for (let j = i + 1; j < size; ++j) {\r\n        if (getState().shape === \"bar\") {\r\n          document.getElementById(`array-bar-${j}`).style.backgroundColor =\r\n            \"red\";\r\n          await sleep(getState().speed);\r\n          document.getElementById(`array-bar-${j}`).style.backgroundColor =\r\n            \"white\";\r\n        } else {\r\n          document.getElementById(`array-dot-${j}`).style.backgroundColor =\r\n            \"red\";\r\n          await sleep(getState().speed);\r\n          document.getElementById(`array-dot-${j}`).style.backgroundColor =\r\n            \"white\";\r\n        }\r\n        if (array[j] < array[min]) {\r\n          if (getState().shape === \"bar\") {\r\n            document.getElementById(`array-bar-${min}`).style.backgroundColor =\r\n              \"white\";\r\n            min = j;\r\n            document.getElementById(`array-bar-${min}`).style.backgroundColor =\r\n              \"green\";\r\n          } else {\r\n            document.getElementById(`array-dot-${min}`).style.backgroundColor =\r\n              \"white\";\r\n            min = j;\r\n            document.getElementById(`array-dot-${min}`).style.backgroundColor =\r\n              \"green\";\r\n          }\r\n        }\r\n        if (!getState().curState) {\r\n          break;\r\n        }\r\n      }\r\n      if (getState().shape === \"bar\") {\r\n        document.getElementById(`array-bar-${min}`).style.backgroundColor =\r\n          \"white\";\r\n      } else {\r\n        document.getElementById(`array-dot-${min}`).style.backgroundColor =\r\n          \"white\";\r\n      }\r\n      temp = array[i];\r\n      array[i] = array[min];\r\n      array[min] = temp;\r\n      await dispatch({\r\n        type: SWAP_ARRAY,\r\n        array: [...array]\r\n      });\r\n      if (!getState().curState) {\r\n        break;\r\n      }\r\n    }\r\n    if (getState().curState) {\r\n      dispatch({ type: TOGGLE_STATE });\r\n    }\r\n  };\r\n}\r\n\r\nfunction sleep(ms) {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nexport default selectionSort;\r\n","import { SWAP_ARRAY, TOGGLE_STATE } from \"../types\";\r\n\r\nexport default function insertionSort() {\r\n  return async (dispatch, getState) => {\r\n    const array = [...getState().array.array];\r\n    const size = getState().array.size;\r\n    let temp = 0,\r\n      j = 0;\r\n\r\n    for (let i = 1; i < size; ++i) {\r\n      j = i - 1;\r\n      temp = array[i];\r\n\r\n      while (j >= 0 && array[j] > temp) {\r\n        if (getState().shape === \"bar\") {\r\n          document.getElementById(`array-bar-${j}`).style.backgroundColor =\r\n            \"red\";\r\n          await sleep(getState().speed);\r\n          document.getElementById(`array-bar-${j}`).style.backgroundColor =\r\n            \"white\";\r\n        } else {\r\n          document.getElementById(`array-bar-${j}`).style.backgroundColor =\r\n            \"red\";\r\n          await sleep(getState().speed);\r\n          document.getElementById(`array-bar-${j}`).style.backgroundColor =\r\n            \"white\";\r\n          array[j + 1] = array[j];\r\n        }\r\n        --j;\r\n        dispatch({\r\n          type: SWAP_ARRAY,\r\n          array: [...array]\r\n        });\r\n        if (!getState().curState) {\r\n          break;\r\n        }\r\n      }\r\n      array[j + 1] = temp;\r\n      dispatch({\r\n        type: SWAP_ARRAY,\r\n        array: [...array]\r\n      });\r\n      if (!getState().curState) {\r\n        break;\r\n      }\r\n    }\r\n    if (getState().curState) {\r\n      dispatch({ type: TOGGLE_STATE });\r\n    }\r\n  };\r\n}\r\n\r\nfunction sleep(ms) {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n","import { SWAP_ARRAY, TOGGLE_STATE } from \"../types\";\r\n\r\nexport default function bubbleSort() {\r\n  return async (dispatch, getState) => {\r\n    const array = [...getState().array.array];\r\n    const size = getState().array.size;\r\n    let temp = 0;\r\n\r\n    for (let i = 0; i < size - 1; ++i) {\r\n      for (let j = 0; j < size - i - 1; ++j) {\r\n        if (array[j] > array[j + 1]) {\r\n          temp = array[j];\r\n          array[j] = array[j + 1];\r\n          array[j + 1] = temp;\r\n        }\r\n        if (getState().shape === \"bar\") {\r\n          document.getElementById(`array-bar-${j}`).style.backgroundColor =\r\n            \"red\";\r\n          document.getElementById(`array-bar-${j + 1}`).style.backgroundColor =\r\n            \"red\";\r\n          await sleep(getState().speed);\r\n          document.getElementById(`array-bar-${j}`).style.backgroundColor =\r\n            \"white\";\r\n          document.getElementById(`array-bar-${j + 1}`).style.backgroundColor =\r\n            \"white\";\r\n        } else {\r\n          document.getElementById(`array-dot-${j}`).style.backgroundColor =\r\n            \"red\";\r\n          document.getElementById(`array-dot-${j + 1}`).style.backgroundColor =\r\n            \"red\";\r\n          await sleep(getState().speed);\r\n          document.getElementById(`array-dot-${j}`).style.backgroundColor =\r\n            \"white\";\r\n          document.getElementById(`array-dot-${j + 1}`).style.backgroundColor =\r\n            \"white\";\r\n        }\r\n        dispatch({\r\n          type: SWAP_ARRAY,\r\n          array: [...array]\r\n        });\r\n        if (!getState().curState) {\r\n          break;\r\n        }\r\n      }\r\n      if (!getState().curState) {\r\n        break;\r\n      }\r\n    }\r\n    if (getState().curState) {\r\n      dispatch({ type: TOGGLE_STATE });\r\n    }\r\n  };\r\n}\r\n\r\nfunction sleep(ms) {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n","import { SWAP_ARRAY, TOGGLE_STATE } from \"../types\";\r\n\r\nfunction binaryInsertionSort() {\r\n  return async (dispatch, getState) => {\r\n    const array = getState().array.array;\r\n    const size = getState().array.size;\r\n    let temp = 0,\r\n      left = 0,\r\n      right = 0,\r\n      mid = 0;\r\n\r\n    for (let i = 1; i < size; ++i) {\r\n      left = 0;\r\n      right = i;\r\n\r\n      while (left < right) {\r\n        mid = Math.floor((left + right) / 2);\r\n        if (getState().shape === \"bar\") {\r\n          document.getElementById(`array-bar-${mid}`).style.backgroundColor =\r\n            \"red\";\r\n          await sleep(getState().speed);\r\n          document.getElementById(`array-bar-${mid}`).style.backgroundColor =\r\n            \"white\";\r\n        } else {\r\n          document.getElementById(`array-dot-${mid}`).style.backgroundColor =\r\n            \"red\";\r\n          await sleep(getState().speed);\r\n          document.getElementById(`array-dot-${mid}`).style.backgroundColor =\r\n            \"white\";\r\n        }\r\n        if (array[i] <= array[mid]) {\r\n          right = mid;\r\n        } else {\r\n          left = mid + 1;\r\n        }\r\n        if (!getState().curState) {\r\n          break;\r\n        }\r\n      }\r\n\r\n      for (left; left < i; ++left) {\r\n        temp = array[left];\r\n        array[left] = array[i];\r\n        array[i] = temp;\r\n        if (getState().shape === \"bar\") {\r\n          document.getElementById(`array-bar-${left}`).style.backgroundColor =\r\n            \"green\";\r\n          await sleep(getState().speed);\r\n          document.getElementById(`array-bar-${left}`).style.backgroundColor =\r\n            \"white\";\r\n        } else {\r\n          document.getElementById(`array-dot-${left}`).style.backgroundColor =\r\n            \"green\";\r\n          await sleep(getState().speed);\r\n          document.getElementById(`array-dot-${left}`).style.backgroundColor =\r\n            \"white\";\r\n        }\r\n        if (!getState().curState) {\r\n          break;\r\n        }\r\n      }\r\n      dispatch({\r\n        type: SWAP_ARRAY,\r\n        array: [...array]\r\n      });\r\n      if (!getState().curState) {\r\n        break;\r\n      }\r\n    }\r\n    if (getState().curState) {\r\n      dispatch({ type: TOGGLE_STATE });\r\n    }\r\n  };\r\n}\r\n\r\nfunction sleep(ms) {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nexport default binaryInsertionSort;\r\n","import { SWAP_ARRAY, TOGGLE_STATE } from \"../types\";\r\n\r\nlet dispatch, getState;\r\n\r\nfunction mergeSort() {\r\n  //toDispatch = [];\r\n  return async (disp, getSt) => {\r\n    dispatch = disp;\r\n    getState = getSt;\r\n    const array = [...getState().array.array];\r\n    const size = getState().array.size;\r\n    await mergeSortRecur(array, 0, size - 1);\r\n    if (getState().curState) {\r\n      dispatch({ type: TOGGLE_STATE });\r\n    }\r\n    //handleDispatch(dispatch);\r\n  };\r\n}\r\n\r\nasync function mergeSortRecur(array, l, r) {\r\n  if (l < r) {\r\n    let m = Math.floor((l + r) / 2);\r\n    await mergeSortRecur(array, l, m);\r\n    if (!getState().curState) {\r\n      return;\r\n    }\r\n    await mergeSortRecur(array, m + 1, r);\r\n    if (!getState().curState) {\r\n      return;\r\n    }\r\n    await merge(array, l, m, r);\r\n    if (!getState().curState) {\r\n      return;\r\n    }\r\n  }\r\n}\r\n\r\nasync function merge(array, l, m, r) {\r\n  let n1 = m - l + 1;\r\n  let n2 = r - m;\r\n\r\n  let L = new Array(n1);\r\n  let R = new Array(n2);\r\n\r\n  for (let i = 0; i < n2; ++i) {\r\n    L[i] = array[l + i];\r\n    R[i] = array[m + 1 + i];\r\n    if (getState().shape === \"bar\") {\r\n      document.getElementById(`array-bar-${l + i}`).style.backgroundColor =\r\n        \"red\";\r\n      document.getElementById(`array-bar-${m + 1 + i}`).style.backgroundColor =\r\n        \"red\";\r\n      await sleep(getState().speed);\r\n      document.getElementById(`array-bar-${l + i}`).style.backgroundColor =\r\n        \"white\";\r\n      document.getElementById(`array-bar-${m + 1 + i}`).style.backgroundColor =\r\n        \"white\";\r\n    } else {\r\n      document.getElementById(`array-dot-${l + i}`).style.backgroundColor =\r\n        \"red\";\r\n      document.getElementById(`array-dot-${m + 1 + i}`).style.backgroundColor =\r\n        \"red\";\r\n      await sleep(getState().speed);\r\n      document.getElementById(`array-dot-${l + i}`).style.backgroundColor =\r\n        \"white\";\r\n      document.getElementById(`array-dot-${m + 1 + i}`).style.backgroundColor =\r\n        \"white\";\r\n    }\r\n    if (!getState().curState) {\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (n1 !== n2) {\r\n    L[n1 - 1] = array[l + n1 - 1];\r\n  }\r\n\r\n  let i = 0,\r\n    j = 0,\r\n    k = l;\r\n  while (i < n1 && j < n2) {\r\n    if (L[i] <= R[j]) {\r\n      array[k] = L[i++];\r\n    } else {\r\n      array[k] = R[j++];\r\n    }\r\n    document.getElementById(`array-bar-${k}`).style.backgroundColor = \"red\";\r\n    await sleep(getState().speed);\r\n    document.getElementById(`array-bar-${k}`).style.backgroundColor = \"white\";\r\n    ++k;\r\n    dispatch({\r\n      type: SWAP_ARRAY,\r\n      array: [...array]\r\n    });\r\n    if (!getState().curState) {\r\n      break;\r\n    }\r\n  }\r\n\r\n  while (i < n1) {\r\n    array[k] = L[i++];\r\n    k++;\r\n    dispatch({\r\n      type: SWAP_ARRAY,\r\n      array: [...array]\r\n    });\r\n    await sleep(getState().speed);\r\n    if (!getState().curState) {\r\n      break;\r\n    }\r\n  }\r\n\r\n  while (j < n2) {\r\n    array[k] = R[j++];\r\n    k++;\r\n    dispatch({\r\n      type: SWAP_ARRAY,\r\n      array: [...array]\r\n    });\r\n    await sleep(getState().speed);\r\n    if (!getState().curState) {\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\nfunction sleep(ms) {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nexport default mergeSort;\r\n","import { SWAP_ARRAY, TOGGLE_STATE } from \"../types\";\r\n\r\nlet dispatch, getState;\r\n\r\nfunction quickSort() {\r\n  return async (disp, getSt) => {\r\n    dispatch = disp;\r\n    getState = getSt;\r\n    let array = [...getState().array.array];\r\n    let size = getState().array.size;\r\n    await sort(array, 0, size - 1);\r\n    if (getState().curState) {\r\n      dispatch({ type: TOGGLE_STATE });\r\n    }\r\n  };\r\n}\r\n\r\nasync function sort(array, low, high) {\r\n  if (low < high) {\r\n    let pivot = await partition(array, low, high);\r\n    if (!getState().curState) {\r\n      return;\r\n    }\r\n    await sort(array, low, pivot);\r\n    if (!getState().curState) {\r\n      return;\r\n    }\r\n    await sort(array, pivot + 1, high);\r\n    if (!getState().curState) {\r\n      return;\r\n    }\r\n  }\r\n}\r\n\r\nasync function partition(array, low, high) {\r\n  let pivot = array[Math.floor((low + high) / 2)],\r\n    temp = 0,\r\n    l = low - 1,\r\n    h = high + 1;\r\n\r\n  while (true) {\r\n    do {\r\n      ++l;\r\n      if (getState().shape === \"bar\") {\r\n        document.getElementById(`array-bar-${l}`).style.backgroundColor = \"red\";\r\n        await sleep(getState().speed);\r\n        document.getElementById(`array-bar-${l}`).style.backgroundColor =\r\n          \"white\";\r\n      } else {\r\n        document.getElementById(`array-dot-${l}`).style.backgroundColor = \"red\";\r\n        await sleep(getState().speed);\r\n        document.getElementById(`array-dot-${l}`).style.backgroundColor =\r\n          \"white\";\r\n      }\r\n      if (!getState().curState) {\r\n        break;\r\n      }\r\n    } while (array[l] < pivot);\r\n    do {\r\n      --h;\r\n      if (getState().shape === \"bar\") {\r\n        document.getElementById(`array-bar-${h}`).style.backgroundColor = \"red\";\r\n        await sleep(getState().speed);\r\n        document.getElementById(`array-bar-${h}`).style.backgroundColor =\r\n          \"white\";\r\n      } else {\r\n        document.getElementById(`array-dot-${h}`).style.backgroundColor = \"red\";\r\n        await sleep(getState().speed);\r\n        document.getElementById(`array-dot-${h}`).style.backgroundColor =\r\n          \"white\";\r\n      }\r\n      if (!getState().curState) {\r\n        break;\r\n      }\r\n    } while (array[h] > pivot);\r\n    if (l >= h) {\r\n      break;\r\n    }\r\n    temp = array[l];\r\n    array[l] = array[h];\r\n    array[h] = temp;\r\n    dispatch({\r\n      type: SWAP_ARRAY,\r\n      array: [...array]\r\n    });\r\n    if (!getState().curState) {\r\n      break;\r\n    }\r\n  }\r\n  return h;\r\n}\r\n\r\nfunction sleep(ms) {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nexport default quickSort;\r\n","import { SWAP_ARRAY, TOGGLE_STATE } from \"../types\";\r\n\r\nfunction heapSort() {\r\n  return async (dispatch, getState) => {\r\n    let array = [...getState().array.array];\r\n    let size = getState().array.size;\r\n    let left, right, temp, j, newJ;\r\n    for (let i = Math.floor(size / 2 - 1); i >= 0; --i) {\r\n      j = newJ = i;\r\n      if (getState().shape === \"bar\") {\r\n        document.getElementById(`array-bar-${i}`).style.backgroundColor =\r\n          \"green\";\r\n      } else {\r\n        document.getElementById(`array-dot-${i}`).style.backgroundColor =\r\n          \"green\";\r\n      }\r\n      while (j < size) {\r\n        newJ = j;\r\n        left = j * 2 + 1;\r\n        right = j * 2 + 2;\r\n        if (left < size && array[left] > array[newJ]) {\r\n          newJ = left;\r\n          if (getState().shape === \"bar\") {\r\n            document.getElementById(`array-bar-${left}`).style.backgroundColor =\r\n              \"red\";\r\n          } else {\r\n            document.getElementById(`array-dot-${left}`).style.backgroundColor =\r\n              \"red\";\r\n          }\r\n        }\r\n\r\n        if (right < size && array[right] > array[newJ]) {\r\n          if (getState().shape === \"bar\") {\r\n            document.getElementById(`array-bar-${left}`).style.backgroundColor =\r\n              \"white\";\r\n            newJ = right;\r\n            document.getElementById(`array-bar-${newJ}`).style.backgroundColor =\r\n              \"red\";\r\n          } else {\r\n            document.getElementById(`array-dot-${left}`).style.backgroundColor =\r\n              \"white\";\r\n            newJ = right;\r\n            document.getElementById(`array-dot-${newJ}`).style.backgroundColor =\r\n              \"red\";\r\n          }\r\n        }\r\n        if (newJ !== j) {\r\n          await sleep(getState().speed);\r\n          if (getState().shape === \"bar\") {\r\n            document.getElementById(`array-bar-${newJ}`).style.backgroundColor =\r\n              \"white\";\r\n          } else {\r\n            document.getElementById(`array-dot-${newJ}`).style.backgroundColor =\r\n              \"white\";\r\n          }\r\n          temp = array[j];\r\n          array[j] = array[newJ];\r\n          array[newJ] = temp;\r\n          j = newJ;\r\n          dispatch({\r\n            type: SWAP_ARRAY,\r\n            array: [...array]\r\n          });\r\n        } else {\r\n          break;\r\n        }\r\n        if (!getState().curState) {\r\n          break;\r\n        }\r\n      }\r\n      if (getState().shape === \"bar\") {\r\n        document.getElementById(`array-bar-${i}`).style.backgroundColor =\r\n          \"white\";\r\n      } else {\r\n        document.getElementById(`array-dot-${i}`).style.backgroundColor =\r\n          \"white\";\r\n      }\r\n      if (!getState().curState) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    for (let i = size - 1; i >= 0; --i) {\r\n      temp = array[i];\r\n      array[i] = array[0];\r\n      array[0] = temp;\r\n      dispatch({\r\n        type: SWAP_ARRAY,\r\n        array: [...array]\r\n      });\r\n      j = newJ = 0;\r\n      if (getState().shape === \"bar\") {\r\n        document.getElementById(`array-bar-${i}`).style.backgroundColor =\r\n          \"green\";\r\n      } else {\r\n        document.getElementById(`array-dot-${i}`).style.backgroundColor =\r\n          \"green\";\r\n      }\r\n      while (j < i) {\r\n        newJ = j;\r\n        left = j * 2 + 1;\r\n        right = j * 2 + 2;\r\n        if (getState().shape === \"bar\") {\r\n          document.getElementById(`array-bar-${newJ}`).style.backgroundColor =\r\n            \"red\";\r\n        } else {\r\n          document.getElementById(`array-dot-${newJ}`).style.backgroundColor =\r\n            \"red\";\r\n        }\r\n        if (left < i && array[left] > array[newJ]) {\r\n          newJ = left;\r\n        }\r\n\r\n        if (right < i && array[right] > array[newJ]) {\r\n          newJ = right;\r\n        }\r\n        await sleep(getState().speed);\r\n        if (getState().shape === \"bar\") {\r\n          document.getElementById(`array-bar-${j}`).style.backgroundColor =\r\n            \"white\";\r\n        } else {\r\n          document.getElementById(`array-dot-${j}`).style.backgroundColor =\r\n            \"white\";\r\n        }\r\n        if (newJ !== j) {\r\n          temp = array[j];\r\n          array[j] = array[newJ];\r\n          array[newJ] = temp;\r\n          j = newJ;\r\n          dispatch({\r\n            type: SWAP_ARRAY,\r\n            array: [...array]\r\n          });\r\n        } else {\r\n          break;\r\n        }\r\n        if (!getState().curState) {\r\n          break;\r\n        }\r\n      }\r\n      if (getState().shape === \"bar\") {\r\n        document.getElementById(`array-bar-${i}`).style.backgroundColor =\r\n          \"white\";\r\n      } else {\r\n        document.getElementById(`array-dot-${i}`).style.backgroundColor =\r\n          \"white\";\r\n      }\r\n      if (!getState().curState) {\r\n        break;\r\n      }\r\n    }\r\n    if (getState().curState) {\r\n      dispatch({ type: TOGGLE_STATE });\r\n    }\r\n  };\r\n}\r\n\r\nfunction sleep(ms) {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nexport default heapSort;\r\n","import { SWAP_ARRAY, TOGGLE_STATE } from \"../types\";\r\n\r\nexport default function radixSort() {\r\n  return async (dispatch, getState) => {\r\n    const array = [...getState().array.array];\r\n    const size = getState().array.size;\r\n    let count = [];\r\n    let mx = array[0];\r\n    let c = 0;\r\n\r\n    for (let i = 0; i < size; ++i) {\r\n      if (array[i] > mx) {\r\n        mx = array[i];\r\n      }\r\n    }\r\n\r\n    for (let m = 1; Math.floor(mx / m) > 0; m *= 10) {\r\n      count = [[], [], [], [], [], [], [], [], [], []];\r\n\r\n      for (let i = 0; i < size; i++) {\r\n        count[Math.floor(array[i] / m) % 10].push(array[i]);\r\n        if (getState().shape === \"bar\") {\r\n          document.getElementById(`array-bar-${i}`).style.backgroundColor =\r\n            \"red\";\r\n          await sleep(getState().speed);\r\n          document.getElementById(`array-bar-${i}`).style.backgroundColor =\r\n            \"white\";\r\n        } else {\r\n          document.getElementById(`array-dot-${i}`).style.backgroundColor =\r\n            \"red\";\r\n          await sleep(getState().speed);\r\n          document.getElementById(`array-dot-${i}`).style.backgroundColor =\r\n            \"white\";\r\n        }\r\n        if (!getState().curState) {\r\n          break;\r\n        }\r\n      }\r\n\r\n      c = 0;\r\n      for (let i = 0; i < 10; ++i) {\r\n        for (let j = 0; j < count[i].length; ++j) {\r\n          if (getState().shape === \"bar\") {\r\n            document.getElementById(`array-bar-${c}`).style.backgroundColor =\r\n              \"red\";\r\n            await sleep(getState().speed);\r\n            document.getElementById(`array-bar-${c}`).style.backgroundColor =\r\n              \"white\";\r\n          } else {\r\n            document.getElementById(`array-dot-${c}`).style.backgroundColor =\r\n              \"red\";\r\n            await sleep(getState().speed);\r\n            document.getElementById(`array-dot-${c}`).style.backgroundColor =\r\n              \"white\";\r\n          }\r\n          array[c] = count[i][j];\r\n          ++c;\r\n          dispatch({ type: SWAP_ARRAY, array: [...array] });\r\n          if (!getState().curState) {\r\n            break;\r\n          }\r\n        }\r\n        if (!getState().curState) {\r\n          break;\r\n        }\r\n      }\r\n      if (!getState().curState) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    dispatch({ type: SWAP_ARRAY, array: [...array] });\r\n    if (getState().curState) {\r\n      dispatch({ type: TOGGLE_STATE });\r\n    }\r\n  };\r\n}\r\n\r\nfunction sleep(ms) {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  NavDropdown,\r\n  OverlayTrigger,\r\n  Tooltip\r\n} from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport setArray from \"../../action/arrayAction\";\r\nimport selectionSort from \"../../action/algorithms/selectionSort\";\r\nimport insertionSort from \"../../action/algorithms/insertionSort\";\r\nimport bubbleSort from \"../../action/algorithms/bubbleSort\";\r\nimport binaryInsertionSort from \"../../action/algorithms/binaryInsertionSort\";\r\nimport mergeSort from \"../../action/algorithms/mergeSort\";\r\nimport quickSort from \"../../action/algorithms/quickSort\";\r\nimport heapSort from \"../../action/algorithms/heapSort\";\r\nimport radixSort from \"../../action/algorithms/radixSort\";\r\n\r\nimport \"./navbar.min.css\";\r\nimport { TOGGLE_STATE, SHAPE_CHANGE } from \"../../action/types\";\r\n\r\nclass NavBar extends Component {\r\n  componentDidMount() {\r\n    this.props.arrayChanged(this.props.size);\r\n  }\r\n\r\n  sizeChange = () => {\r\n    this.props.arrayChanged(document.getElementById(\"array_size\").value);\r\n  };\r\n\r\n  speedChange = () => {\r\n    this.props.speedChanged(document.getElementById(\"speed\").value);\r\n  };\r\n\r\n  startSelected = () => {\r\n    this.props.toggleState();\r\n    switch (this.props.algorithm) {\r\n      case \"SELECTION_SORT\":\r\n        this.props.selection_sort();\r\n        return;\r\n      case \"BUBBLE_SORT\":\r\n        this.props.bubble_sort();\r\n        return;\r\n      case \"INSERTION_SORT\":\r\n        this.props.insertion_sort();\r\n        return;\r\n      case \"BINARY_INSERTION_SORT\":\r\n        this.props.binary_insertion_sort();\r\n        return;\r\n      case \"MERGE_SORT\":\r\n        this.props.merge_sort();\r\n        return;\r\n      case \"QUICK_SORT\":\r\n        this.props.quick_sort();\r\n        return;\r\n      case \"HEAP_SORT\":\r\n        this.props.heap_sort();\r\n        return;\r\n      case \"RADIX_SORT\":\r\n        this.props.radix_sort();\r\n        return;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { size, speed, algorithmChanged } = this.props;\r\n\r\n    return (\r\n      <Navbar\r\n        collapseOnSelect\r\n        expand=\"lg\"\r\n        bg=\"dark\"\r\n        variant=\"dark\"\r\n        className=\"navbar fixed\"\r\n      >\r\n        <Navbar.Brand href=\"\">\r\n          {\"Sorting Algorithm  \"}\r\n          <img\r\n            alt=\"\"\r\n            src=\"https://media1.tenor.com/images/d3e3bb1edd13218f434b5d2ac6d0c09e/tenor.gif\"\r\n            width=\"30\"\r\n            height=\"30\"\r\n            className=\"d-inline-block align-top rounded-circle\"\r\n          />\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link href=\"\">Array Size</Nav.Link>\r\n            <OverlayTrigger\r\n              overlay={<Tooltip id=\"tooltip-size\">{size}</Tooltip>}\r\n            >\r\n              <input\r\n                type=\"range\"\r\n                className=\"custom-range\"\r\n                id=\"array_size\"\r\n                min=\"5\"\r\n                max={Math.floor((window.screen.width - 222) / 3.11)}\r\n                defaultValue={size}\r\n                onInput={() => this.sizeChange()}\r\n                disabled={this.props.curState}\r\n              />\r\n            </OverlayTrigger>\r\n            <Nav.Link href=\"\">Sorting Speed</Nav.Link>\r\n            <OverlayTrigger\r\n              overlay={<Tooltip id=\"tooltip-size\">+{speed}ms</Tooltip>}\r\n            >\r\n              <input\r\n                type=\"range\"\r\n                className=\"custom-range\"\r\n                id=\"speed\"\r\n                min=\"0\"\r\n                max=\"100\"\r\n                defaultValue={speed}\r\n                onInput={() => this.speedChange()}\r\n              />\r\n            </OverlayTrigger>\r\n            <NavDropdown title=\"Algorithms\" id=\"collasible-nav-dropdown\">\r\n              <NavDropdown.Item\r\n                onClick={() => algorithmChanged(\"SELECTION_SORT\")}\r\n              >\r\n                Selection Sort\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item onClick={() => algorithmChanged(\"BUBBLE_SORT\")}>\r\n                Bubble Sort\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item\r\n                onClick={() => algorithmChanged(\"INSERTION_SORT\")}\r\n              >\r\n                Insertion Sort\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item\r\n                onClick={() => algorithmChanged(\"BINARY_INSERTION_SORT\")}\r\n              >\r\n                Binary Insertion Sort\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item onClick={() => algorithmChanged(\"MERGE_SORT\")}>\r\n                Merge Sort\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item onClick={() => algorithmChanged(\"QUICK_SORT\")}>\r\n                Quick Sort\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item onClick={() => algorithmChanged(\"HEAP_SORT\")}>\r\n                Heap Sort\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item onClick={() => algorithmChanged(\"RADIX_SORT\")}>\r\n                Radix Sort\r\n              </NavDropdown.Item>\r\n            </NavDropdown>\r\n            <NavDropdown\r\n              title=\"Shapes\"\r\n              id=\"collasible-nav-dropdown\"\r\n              disabled={this.props.curState}\r\n            >\r\n              <NavDropdown.Item\r\n                onClick={() => this.props.shapeChanged(\"bar\")}\r\n                disabled={this.props.curState}\r\n              >\r\n                Bar\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item\r\n                onClick={() => this.props.shapeChanged(\"dot\")}\r\n                disabled={this.props.curState}\r\n              >\r\n                Dot\r\n              </NavDropdown.Item>\r\n            </NavDropdown>\r\n            <Nav.Link\r\n              href=\"\"\r\n              onClick={() => this.startSelected()}\r\n              disabled={this.props.curState}\r\n            >\r\n              Start\r\n            </Nav.Link>\r\n            <Nav.Link\r\n              href=\"\"\r\n              onClick={() => this.props.toggleState()}\r\n              disabled={!this.props.curState}\r\n            >\r\n              Stop\r\n            </Nav.Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  array: state.array.array,\r\n  size: state.array.size,\r\n  speed: state.speed,\r\n  algorithm: state.algorithm,\r\n  curState: state.curState\r\n});\r\n\r\nconst mapDispathToProps = dispatch => {\r\n  return {\r\n    arrayChanged: size => {\r\n      dispatch(setArray(size));\r\n    },\r\n    algorithmChanged: algorithm => {\r\n      dispatch({ type: \"ALGORITHM_SELECT\", algorithm: algorithm });\r\n    },\r\n    speedChanged: speed => {\r\n      dispatch({ type: \"SPEED_CHENGE\", speed: speed });\r\n    },\r\n    shapeChanged: shape => {\r\n      dispatch({ type: SHAPE_CHANGE, shape: shape });\r\n    },\r\n    toggleState: () => {\r\n      dispatch({ type: TOGGLE_STATE });\r\n    },\r\n    selection_sort: () => {\r\n      dispatch(selectionSort());\r\n    },\r\n    insertion_sort: () => {\r\n      dispatch(insertionSort());\r\n    },\r\n    bubble_sort: () => {\r\n      dispatch(bubbleSort());\r\n    },\r\n    binary_insertion_sort: () => {\r\n      dispatch(binaryInsertionSort());\r\n    },\r\n    merge_sort: () => {\r\n      dispatch(mergeSort());\r\n    },\r\n    quick_sort: () => {\r\n      dispatch(quickSort());\r\n    },\r\n    heap_sort: () => {\r\n      dispatch(heapSort());\r\n    },\r\n    radix_sort: () => {\r\n      dispatch(radixSort());\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispathToProps\r\n)(NavBar);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./arrayContainer.css\";\r\n\r\nconst PRIMARY_COLOR = [\"white\", \"black\"];\r\n\r\nclass ArrayContainer extends Component {\r\n  render() {\r\n    const { array, size } = this.props;\r\n    let screenWidth = window.screen.width;\r\n    let barWidth = Math.floor(screenWidth / (size * 1.5));\r\n    if (screenWidth >= 768) {\r\n      screenWidth -= 244;\r\n      barWidth = Math.floor((window.screen.width - 444) / (size * 2.3));\r\n    }\r\n    let widthStyle = {\r\n      width: `${screenWidth}px`\r\n    };\r\n\r\n    return (\r\n      <div className=\"arr-container\" style={widthStyle}>\r\n        <div className=\"array\" style={widthStyle}>\r\n          {array.map((value, index) => (\r\n            <div\r\n              className=\"array-bar\"\r\n              id={`array-bar-${index}`}\r\n              key={index}\r\n              style={{\r\n                width: `${barWidth}px`,\r\n                backgroundColor:\r\n                  PRIMARY_COLOR[this.props.shape === \"bar\" ? 0 : 1],\r\n                height: value\r\n              }}\r\n            >\r\n              <div\r\n                className=\"dot\"\r\n                id={`array-dot-${index}`}\r\n                style={{\r\n                  height: `${barWidth}px`,\r\n                  width: `${barWidth}px`,\r\n                  backgroundColor: PRIMARY_COLOR[0]\r\n                }}\r\n              ></div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  size: state.array.size,\r\n  array: state.array.array,\r\n  shape: state.shape\r\n});\r\n\r\nexport default connect(mapStateToProps)(ArrayContainer);\r\n","import React, { Component } from \"react\";\r\n\r\nimport NavBar from \"./components/Navbar/navbar.jsx\";\r\nimport ArrayContainer from \"./components/ArrayContainer/arrayContainer\";\r\n\r\nclass VirtualizationApp extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <NavBar />\r\n        <ArrayContainer />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VirtualizationApp;\r\n","import { ARRAY_CHANGE, SWAP_ARRAY } from \"../action/types\";\r\n\r\nconst initialState = {\r\n  size: Math.floor(((window.screen.width - 222) / 3.33) * 0.5),\r\n  array: []\r\n};\r\n\r\nexport const arrayReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ARRAY_CHANGE:\r\n      return {\r\n        ...state,\r\n        size: action.payload.size,\r\n        array: action.payload.array\r\n      };\r\n    case SWAP_ARRAY:\r\n      return {\r\n        ...state,\r\n        array: action.array\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport { arrayReducer } from \"./array\";\r\nimport { algoReducer } from \"./algorithm\";\r\nimport { speedReducer } from \"./speed\";\r\nimport { toggleState } from \"./currenState\";\r\nimport { shapeState } from \"./shape\";\r\n\r\nconst rootReducer = combineReducers({\r\n  array: arrayReducer,\r\n  speed: speedReducer,\r\n  algorithm: algoReducer,\r\n  curState: toggleState,\r\n  shape: shapeState\r\n});\r\n\r\nexport default rootReducer;\r\n","import { SPEED_CHENGE } from \"../action/types\";\r\n\r\nexport const speedReducer = (state = 50, action) => {\r\n  switch (action.type) {\r\n    case SPEED_CHENGE:\r\n      return action.speed;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { ALGORITHM_SELECT } from \"../action/types\";\r\n\r\nexport const algoReducer = (state = \"SELECTION_SORT\", action) => {\r\n  switch (action.type) {\r\n    case ALGORITHM_SELECT:\r\n      return action.algorithm;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { TOGGLE_STATE } from \"../action/types\";\r\n\r\nexport const toggleState = (state = false, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_STATE:\r\n      return !state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SHAPE_CHANGE } from \"../action/types\";\r\n\r\nexport const shapeState = (state = \"bar\", action) => {\r\n  switch (action.type) {\r\n    case SHAPE_CHANGE:\r\n      return action.shape;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, applyMiddleware } from \"redux\";\r\n\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport rootReducer from \"./reducers/index\";\r\n\r\nconst configureStore = () => {\r\n  const store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\n  return store;\r\n};\r\n\r\nexport default configureStore;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport VirtualizationApp from \"./virtualizationApp\";\r\nimport { Provider } from \"react-redux\";\r\nimport configureStore from \"./store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={configureStore()}>\r\n    <VirtualizationApp />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}