{"version":3,"sources":["components/Navbar/navbar.jsx","components/ArrayBar/arrayBar.jsx","virtualizationApp.js","index.js"],"names":["NavBar","this","props","size","speed","onAlgorithmSelect","onSizeChange","onSpeedChange","onStartSelected","Navbar","collapseOnSelect","expand","bg","variant","className","Brand","href","alt","src","width","height","Toggle","aria-controls","Collapse","id","Nav","Link","OverlayTrigger","overlay","Tooltip","type","min","max","defaultValue","onInput","NavDropdown","title","Item","onClick","Component","ArrayBar","array","screenWidth","window","screen","barWidth","console","log","widthStyle","style","map","value","index","key","backgroundColor","VirtualizationApp","state","algorithmSelected","algorithmSelect","eventKey","setState","sizeChange","document","getElementById","generateArray","speedChange","startSelected","i","push","getRandomInt","sort","a","b","Fragment","Math","ceil","floor","random","ReactDOM","render"],"mappings":"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","file":"static/js/main.698fd79e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  NavDropdown,\r\n  OverlayTrigger,\r\n  Tooltip\r\n} from \"react-bootstrap\";\r\n\r\nimport \"./navbar.min.css\";\r\n\r\nclass NavBar extends Component {\r\n  render() {\r\n    const {\r\n      size,\r\n      speed,\r\n      onAlgorithmSelect,\r\n      onSizeChange,\r\n      onSpeedChange,\r\n      onStartSelected\r\n    } = this.props;\r\n\r\n    return (\r\n      <Navbar\r\n        collapseOnSelect\r\n        expand=\"lg\"\r\n        bg=\"dark\"\r\n        variant=\"dark\"\r\n        className=\"navbar fixed\"\r\n      >\r\n        <Navbar.Brand href=\"#home\">\r\n          {\"Sorting Algorithm  \"}\r\n          <img\r\n            alt=\"\"\r\n            src=\"https://media1.tenor.com/images/d3e3bb1edd13218f434b5d2ac6d0c09e/tenor.gif\"\r\n            width=\"30\"\r\n            height=\"30\"\r\n            className=\"d-inline-block align-top rounded-circle\"\r\n          />\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link href=\"\">Array Size</Nav.Link>\r\n            <OverlayTrigger\r\n              overlay={<Tooltip id=\"tooltip-size\">{size}</Tooltip>}\r\n            >\r\n              <input\r\n                type=\"range\"\r\n                className=\"custom-range\"\r\n                id=\"array_size\"\r\n                min=\"4\"\r\n                max=\"520\"\r\n                defaultValue={size}\r\n                onInput={() => onSizeChange()}\r\n              />\r\n            </OverlayTrigger>\r\n            <Nav.Link href=\"\">Sorting Speed</Nav.Link>\r\n            <OverlayTrigger\r\n              overlay={<Tooltip id=\"tooltip-size\">+{speed}%</Tooltip>}\r\n            >\r\n              <input\r\n                type=\"range\"\r\n                className=\"custom-range\"\r\n                id=\"speed\"\r\n                min=\"0\"\r\n                max=\"100\"\r\n                defaultValue={speed}\r\n                onInput={() => onSpeedChange()}\r\n              />\r\n            </OverlayTrigger>\r\n            <NavDropdown title=\"Algorithms\" id=\"collasible-nav-dropdown\">\r\n              <NavDropdown.Item\r\n                onClick={() => onAlgorithmSelect(\"selectionSort\")}\r\n              >\r\n                Selection Sort\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item onClick={() => onAlgorithmSelect(\"bubbleSort\")}>\r\n                Bubble Sort\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item\r\n                onClick={() => onAlgorithmSelect(\"binaryInsertionSort\")}\r\n              >\r\n                Binary Insertion Sort\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item\r\n                onClick={() => onAlgorithmSelect(\"insertionSort\")}\r\n              >\r\n                Insertion Sort\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item onClick={() => onAlgorithmSelect(\"mergeSort\")}>\r\n                Merge Sort\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item onClick={() => onAlgorithmSelect(\"quickSort\")}>\r\n                Quick Sort\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item onClick={() => onAlgorithmSelect(\"heapSort\")}>\r\n                Heap Sort\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item onClick={() => onAlgorithmSelect(\"radixSort\")}>\r\n                Radix Sort\r\n              </NavDropdown.Item>\r\n            </NavDropdown>\r\n            <Nav.Link href=\"#start\" onClick={() => onStartSelected()}>\r\n              Start\r\n            </Nav.Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./arrayBar.css\";\r\n\r\nconst PRIMARY_COLOR = \"white\";\r\n\r\nexport default class ArrayBar extends Component {\r\n  render() {\r\n    const { array, size } = this.props;\r\n    let screenWidth = window.screen.width;\r\n    let barWidth = screenWidth / (size * 1.5);\r\n    if (screenWidth >= 768) {\r\n      screenWidth -= 244;\r\n      barWidth = (window.screen.width - 444) / (size * 2.3);\r\n    }\r\n    console.log(barWidth);\r\n    let widthStyle = {\r\n      width: `${screenWidth}px`\r\n    };\r\n\r\n    return (\r\n      <div className=\"arr-container\" style={widthStyle}>\r\n        <div className=\"array\" style={widthStyle}>\r\n          {array.map((value, index) => (\r\n            <div\r\n              className=\"array-bar\"\r\n              key={index}\r\n              style={{\r\n                width: `${barWidth}px`,\r\n                backgroundColor: PRIMARY_COLOR,\r\n                height: value\r\n              }}\r\n            ></div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport NavBar from \"./components/Navbar/navbar.jsx\";\r\nimport ArrayBar from \"./components/ArrayBar/arrayBar.jsx\";\r\n\r\nexport default class VirtualizationApp extends Component {\r\n  state = {\r\n    algorithmSelected: \"selectionSort\",\r\n    size: \"50\",\r\n    speed: \"0\",\r\n    array: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    const array = this.generateArray(this.state.size);\r\n    this.setState({ array });\r\n  }\r\n\r\n  algorithmSelect = eventKey => {\r\n    console.log(eventKey);\r\n    this.setState({ algorithmSelected: eventKey });\r\n  };\r\n\r\n  sizeChange = () => {\r\n    const size = document.getElementById(\"array_size\").value;\r\n    const array = this.generateArray(size);\r\n    this.setState({ size, array });\r\n    //this.console.log(this.state.size);\r\n  };\r\n\r\n  speedChange = () => {\r\n    this.setState({ speed: document.getElementById(\"speed\").value });\r\n    console.log(this.state.speed, \"%\");\r\n  };\r\n\r\n  startSelected = () => {\r\n    console.log(\r\n      \"Start\",\r\n      this.state.algorithmSelected,\r\n      \"with size =\",\r\n      this.state.size,\r\n      \", speed = +\",\r\n      this.state.speed,\r\n      \"%\"\r\n    );\r\n  };\r\n\r\n  generateArray(size) {\r\n    const array = [];\r\n    for (let i = 0; i < size; ++i) {\r\n      array.push(getRandomInt(5, 888));\r\n    }\r\n\r\n    return array.sort((a, b) => a - b);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <NavBar\r\n          size={this.state.size}\r\n          speed={this.state.speed}\r\n          onAlgorithmSelect={this.algorithmSelect}\r\n          onSizeChange={this.sizeChange}\r\n          onSpeedChange={this.speedChange}\r\n          onStartSelected={this.startSelected}\r\n        />\r\n        <ArrayBar array={this.state.array} size={this.state.size} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport VirtualizationApp from \"./virtualizationApp\";\r\n\r\nReactDOM.render(<VirtualizationApp />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}