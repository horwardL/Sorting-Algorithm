{"version":3,"sources":["components/Navbar/navbar.jsx","components/ArrayContainer/arrayContainer.jsx","virtualizationApp.js","reducers/array/index.js","reducers/algorithm/index.js","reducers/index.js","store.js","index.js"],"names":["NavBar","sizeChange","props","arrayChanged","document","getElementById","value","speedChange","speedChanged","console","log","speed","startSelected","algorithm","size","this","algorithmChanged","Navbar","collapseOnSelect","expand","bg","variant","className","Brand","href","alt","src","width","height","Toggle","aria-controls","Collapse","id","Nav","Link","OverlayTrigger","overlay","Tooltip","type","min","max","window","screen","defaultValue","onInput","NavDropdown","title","Item","onClick","Component","connect","state","array","dispatch","ArrayContainer","screenWidth","barWidth","widthStyle","style","map","index","key","backgroundColor","VirtualizationApp","Fragment","initialState","maxHeight","generateArray","i","push","getRandomInt","Math","ceil","floor","random","rootReducer","combineReducers","action","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","store"],"mappings":"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","file":"static/js/main.96ad1de0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  NavDropdown,\r\n  OverlayTrigger,\r\n  Tooltip\r\n} from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./navbar.min.css\";\r\n\r\nclass NavBar extends Component {\r\n  componentDidMount() {\r\n    this.props.arrayChanged(this.props.size);\r\n  }\r\n\r\n  sizeChange = () => {\r\n    this.props.arrayChanged(document.getElementById(\"array_size\").value);\r\n  };\r\n\r\n  speedChange = () => {\r\n    this.props.speedChanged(document.getElementById(\"speed\").value);\r\n    console.log(`+${this.props.speed}%`);\r\n  };\r\n\r\n  startSelected = () => {\r\n    console.log(\r\n      `Start ${this.props.algorithm} with size = ${this.props.size}, speed = +${this.props.speed}%`\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { size, speed, algorithmChanged } = this.props;\r\n\r\n    return (\r\n      <Navbar\r\n        collapseOnSelect\r\n        expand=\"lg\"\r\n        bg=\"dark\"\r\n        variant=\"dark\"\r\n        className=\"navbar fixed\"\r\n      >\r\n        <Navbar.Brand href=\"\">\r\n          {\"Sorting Algorithm  \"}\r\n          <img\r\n            alt=\"\"\r\n            src=\"https://media1.tenor.com/images/d3e3bb1edd13218f434b5d2ac6d0c09e/tenor.gif\"\r\n            width=\"30\"\r\n            height=\"30\"\r\n            className=\"d-inline-block align-top rounded-circle\"\r\n          />\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link href=\"\">Array Size</Nav.Link>\r\n            <OverlayTrigger\r\n              overlay={<Tooltip id=\"tooltip-size\">{size}</Tooltip>}\r\n            >\r\n              <input\r\n                type=\"range\"\r\n                className=\"custom-range\"\r\n                id=\"array_size\"\r\n                min=\"5\"\r\n                max={(window.screen.width - 222) / 3.75}\r\n                defaultValue={size}\r\n                onInput={() => this.sizeChange()}\r\n              />\r\n            </OverlayTrigger>\r\n            <Nav.Link href=\"\">Sorting Speed</Nav.Link>\r\n            <OverlayTrigger\r\n              overlay={<Tooltip id=\"tooltip-size\">+{speed}%</Tooltip>}\r\n            >\r\n              <input\r\n                type=\"range\"\r\n                className=\"custom-range\"\r\n                id=\"speed\"\r\n                min=\"0\"\r\n                max=\"100\"\r\n                defaultValue={speed}\r\n                onInput={() => this.speedChange()}\r\n              />\r\n            </OverlayTrigger>\r\n            <NavDropdown title=\"Algorithms\" id=\"collasible-nav-dropdown\">\r\n              <NavDropdown.Item\r\n                onClick={() => algorithmChanged(\"selectionSort\")}\r\n              >\r\n                Selection Sort\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item onClick={() => algorithmChanged(\"bubbleSort\")}>\r\n                Bubble Sort\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item\r\n                onClick={() => algorithmChanged(\"binaryInsertionSort\")}\r\n              >\r\n                Binary Insertion Sort\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item\r\n                onClick={() => algorithmChanged(\"insertionSort\")}\r\n              >\r\n                Insertion Sort\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item onClick={() => algorithmChanged(\"mergeSort\")}>\r\n                Merge Sort\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item onClick={() => algorithmChanged(\"quickSort\")}>\r\n                Quick Sort\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item onClick={() => algorithmChanged(\"heapSort\")}>\r\n                Heap Sort\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item onClick={() => algorithmChanged(\"radixSort\")}>\r\n                Radix Sort\r\n              </NavDropdown.Item>\r\n            </NavDropdown>\r\n            <Nav.Link href=\"#start\" onClick={() => this.startSelected()}>\r\n              Start\r\n            </Nav.Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  size: state.array.size,\r\n  speed: state.array.speed,\r\n  algorithm: state.algorithm\r\n});\r\n\r\nconst mapDispathToProps = dispatch => {\r\n  return {\r\n    arrayChanged: size => {\r\n      dispatch({ type: \"ARRAY_CHANGE\", size: size });\r\n    },\r\n    algorithmChanged: algorithm => {\r\n      dispatch({ type: \"ALGORITHM_SELECT\", algorithm: algorithm });\r\n    },\r\n    speedChanged: speed => {\r\n      dispatch({ type: \"SPEED_CHENGE\", speed: speed });\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispathToProps\r\n)(NavBar);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./arrayContainer.css\";\r\n\r\nconst PRIMARY_COLOR = \"white\";\r\n\r\nclass ArrayContainer extends Component {\r\n  render() {\r\n    const { array, size } = this.props;\r\n    let screenWidth = window.screen.width;\r\n    let barWidth = screenWidth / (size * 1.5);\r\n    if (screenWidth >= 768) {\r\n      screenWidth -= 244;\r\n      barWidth = (window.screen.width - 444) / (size * 2.3);\r\n    }\r\n    let widthStyle = {\r\n      width: `${screenWidth}px`\r\n    };\r\n\r\n    return (\r\n      <div className=\"arr-container\" style={widthStyle}>\r\n        <div className=\"array\" style={widthStyle}>\r\n          {array.map((value, index) => (\r\n            <div\r\n              className=\"array-bar\"\r\n              key={index}\r\n              style={{\r\n                width: `${barWidth}px`,\r\n                backgroundColor: PRIMARY_COLOR,\r\n                height: value\r\n              }}\r\n            ></div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  size: state.array.size,\r\n  array: state.array.array\r\n});\r\n\r\nexport default connect(mapStateToProps)(ArrayContainer);\r\n","import React, { Component } from \"react\";\r\n\r\nimport NavBar from \"./components/Navbar/navbar.jsx\";\r\nimport ArrayContainer from \"./components/ArrayContainer/arrayContainer\";\r\n\r\nclass VirtualizationApp extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <NavBar />\r\n        <ArrayContainer />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VirtualizationApp;\r\n","const initialState = {\r\n  size: \"50\",\r\n  speed: \"0\",\r\n  array: []\r\n};\r\n\r\nconst maxHeight = window.screen.height * 0.87;\r\n\r\nexport const arrayReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"ARRAY_CHANGE\":\r\n      return {\r\n        ...state,\r\n        size: action.size,\r\n        array: generateArray(action.size)\r\n      };\r\n    case \"SPEED_CHENGE\":\r\n      return {\r\n        ...state,\r\n        speed: action.speed\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nfunction generateArray(size) {\r\n  const array = [];\r\n  for (let i = 0; i < size; ++i) {\r\n    array.push(getRandomInt(5, maxHeight));\r\n  }\r\n\r\n  return array;\r\n}\r\n\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n","const algorithmState = \"selectionSort\";\r\n\r\nexport const algoReducer = (state = algorithmState, action) => {\r\n  switch (action.type) {\r\n    case \"ALGORITHM_SELECT\":\r\n      return action.algorithm;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { arrayReducer } from \"./array/index\";\r\nimport { algoReducer } from \"./algorithm/index\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  array: arrayReducer,\r\n  algorithm: algoReducer\r\n});\r\n","import { createStore } from \"redux\";\r\nimport { rootReducer } from \"./reducers/index\";\r\n\r\nexport default createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport VirtualizationApp from \"./virtualizationApp\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <VirtualizationApp />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}