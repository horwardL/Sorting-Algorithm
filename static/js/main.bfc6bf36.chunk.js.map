{"version":3,"sources":["components/Navbar/navbar.jsx","components/ArrayBar/arrayBar.jsx","virtualizationApp.js","index.js"],"names":["NavBar","this","props","size","speed","onAlgorithmSelect","onSizeChange","onSpeedChange","onStartSelected","Navbar","collapseOnSelect","expand","bg","variant","className","Brand","href","alt","src","width","height","Toggle","aria-controls","Collapse","id","Nav","Link","OverlayTrigger","overlay","Tooltip","type","min","max","window","screen","defaultValue","onInput","NavDropdown","title","Item","onClick","Component","ArrayBar","array","screenWidth","barWidth","widthStyle","style","map","value","index","key","backgroundColor","maxHeight","VirtualizationApp","state","algorithmSelected","algorithmSelect","eventKey","console","log","setState","sizeChange","document","getElementById","generateArray","speedChange","startSelected","i","push","getRandomInt","Fragment","Math","ceil","floor","random","ReactDOM","render"],"mappings":"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","file":"static/js/main.bfc6bf36.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  NavDropdown,\r\n  OverlayTrigger,\r\n  Tooltip\r\n} from \"react-bootstrap\";\r\n\r\nimport \"./navbar.min.css\";\r\n\r\nclass NavBar extends Component {\r\n  render() {\r\n    const {\r\n      size,\r\n      speed,\r\n      onAlgorithmSelect,\r\n      onSizeChange,\r\n      onSpeedChange,\r\n      onStartSelected\r\n    } = this.props;\r\n\r\n    return (\r\n      <Navbar\r\n        collapseOnSelect\r\n        expand=\"lg\"\r\n        bg=\"dark\"\r\n        variant=\"dark\"\r\n        className=\"navbar fixed\"\r\n      >\r\n        <Navbar.Brand href=\"#home\">\r\n          {\"Sorting Algorithm  \"}\r\n          <img\r\n            alt=\"\"\r\n            src=\"https://media1.tenor.com/images/d3e3bb1edd13218f434b5d2ac6d0c09e/tenor.gif\"\r\n            width=\"30\"\r\n            height=\"30\"\r\n            className=\"d-inline-block align-top rounded-circle\"\r\n          />\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link href=\"\">Array Size</Nav.Link>\r\n            <OverlayTrigger\r\n              overlay={<Tooltip id=\"tooltip-size\">{size}</Tooltip>}\r\n            >\r\n              <input\r\n                type=\"range\"\r\n                className=\"custom-range\"\r\n                id=\"array_size\"\r\n                min=\"5\"\r\n                max={(window.screen.width - 222) / 3.75}\r\n                defaultValue={size}\r\n                onInput={() => onSizeChange()}\r\n              />\r\n            </OverlayTrigger>\r\n            <Nav.Link href=\"\">Sorting Speed</Nav.Link>\r\n            <OverlayTrigger\r\n              overlay={<Tooltip id=\"tooltip-size\">+{speed}%</Tooltip>}\r\n            >\r\n              <input\r\n                type=\"range\"\r\n                className=\"custom-range\"\r\n                id=\"speed\"\r\n                min=\"0\"\r\n                max=\"100\"\r\n                defaultValue={speed}\r\n                onInput={() => onSpeedChange()}\r\n              />\r\n            </OverlayTrigger>\r\n            <NavDropdown title=\"Algorithms\" id=\"collasible-nav-dropdown\">\r\n              <NavDropdown.Item\r\n                onClick={() => onAlgorithmSelect(\"selectionSort\")}\r\n              >\r\n                Selection Sort\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item onClick={() => onAlgorithmSelect(\"bubbleSort\")}>\r\n                Bubble Sort\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item\r\n                onClick={() => onAlgorithmSelect(\"binaryInsertionSort\")}\r\n              >\r\n                Binary Insertion Sort\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item\r\n                onClick={() => onAlgorithmSelect(\"insertionSort\")}\r\n              >\r\n                Insertion Sort\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item onClick={() => onAlgorithmSelect(\"mergeSort\")}>\r\n                Merge Sort\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item onClick={() => onAlgorithmSelect(\"quickSort\")}>\r\n                Quick Sort\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item onClick={() => onAlgorithmSelect(\"heapSort\")}>\r\n                Heap Sort\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item onClick={() => onAlgorithmSelect(\"radixSort\")}>\r\n                Radix Sort\r\n              </NavDropdown.Item>\r\n            </NavDropdown>\r\n            <Nav.Link href=\"#start\" onClick={() => onStartSelected()}>\r\n              Start\r\n            </Nav.Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./arrayBar.css\";\r\n\r\nconst PRIMARY_COLOR = \"white\";\r\n\r\nexport default class ArrayBar extends Component {\r\n  render() {\r\n    const { array, size } = this.props;\r\n    let screenWidth = window.screen.width;\r\n    let barWidth = screenWidth / (size * 1.5);\r\n    if (screenWidth >= 768) {\r\n      screenWidth -= 244;\r\n      barWidth = (window.screen.width - 444) / (size * 2.3);\r\n    }\r\n    let widthStyle = {\r\n      width: `${screenWidth}px`\r\n    };\r\n\r\n    return (\r\n      <div className=\"arr-container\" style={widthStyle}>\r\n        <div className=\"array\" style={widthStyle}>\r\n          {array.map((value, index) => (\r\n            <div\r\n              className=\"array-bar\"\r\n              key={index}\r\n              style={{\r\n                width: `${barWidth}px`,\r\n                backgroundColor: PRIMARY_COLOR,\r\n                height: value\r\n              }}\r\n            ></div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport NavBar from \"./components/Navbar/navbar.jsx\";\r\nimport ArrayBar from \"./components/ArrayBar/arrayBar.jsx\";\r\n\r\nconst maxHeight = window.screen.height * 0.88;\r\n\r\nexport default class VirtualizationApp extends Component {\r\n  state = {\r\n    algorithmSelected: \"selectionSort\",\r\n    size: \"50\",\r\n    speed: \"0\",\r\n    array: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    const array = this.generateArray(this.state.size);\r\n    this.setState({ array });\r\n  }\r\n\r\n  algorithmSelect = eventKey => {\r\n    console.log(eventKey);\r\n    this.setState({ algorithmSelected: eventKey });\r\n  };\r\n\r\n  sizeChange = () => {\r\n    const size = document.getElementById(\"array_size\").value;\r\n    const array = this.generateArray(size);\r\n    this.setState({ size, array });\r\n    //this.console.log(this.state.size);\r\n  };\r\n\r\n  speedChange = () => {\r\n    this.setState({ speed: document.getElementById(\"speed\").value });\r\n    console.log(this.state.speed, \"%\");\r\n  };\r\n\r\n  startSelected = () => {\r\n    console.log(\r\n      \"Start\",\r\n      this.state.algorithmSelected,\r\n      \"with size =\",\r\n      this.state.size,\r\n      \", speed = +\",\r\n      this.state.speed,\r\n      \"%\"\r\n    );\r\n  };\r\n\r\n  generateArray(size) {\r\n    const array = [];\r\n    for (let i = 0; i < size; ++i) {\r\n      array.push(getRandomInt(5, maxHeight));\r\n    }\r\n\r\n    return array;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <NavBar\r\n          size={this.state.size}\r\n          speed={this.state.speed}\r\n          onAlgorithmSelect={this.algorithmSelect}\r\n          onSizeChange={this.sizeChange}\r\n          onSpeedChange={this.speedChange}\r\n          onStartSelected={this.startSelected}\r\n        />\r\n        <ArrayBar array={this.state.array} size={this.state.size} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport VirtualizationApp from \"./virtualizationApp\";\r\n\r\nReactDOM.render(<VirtualizationApp />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}